#ifndef LINKSETOUTPUT_H
#define LINKSETOUTPUT_H

#include <regex>
#include <map>
#include <ostream>
#include <set>

#include "nlohmann/json.hpp"
#include "mabl3/JsonStream.h"
#include "Cubeset.h"
#include "IdentifierMapping.h"
#include "Linkset.h"

using json = nlohmann::json;



auto orthologyInformation() {
    std::map<std::string, std::set<std::string>> orthology;
    orthology.insert({"ENST00000393077", std::set<std::string>{"ENSMUSG00000024983", "ENSHGLG00000011937", "ENSMFAG00000032726"}});
    orthology.insert({"ENST00000349004", std::set<std::string>{"ENSMUSG00000027634", "ENSHGLG00000013807", "ENSMFAG00000037694"}});
    orthology.insert({"ENST00000295588", std::set<std::string>{"ENSMUSG00000034064", "ENSMFAG00000014083", "ENSHGLG00000011432"}});
    orthology.insert({"ENST00000337815", std::set<std::string>{"ENSMUSG00000079215", "ENSMFAG00000030650", "ENSHGLG00000012426"}});
    orthology.insert({"ENST00000373664", std::set<std::string>{"ENSMUSG00000027641", "ENSHGLG00000007206", "ENSMFAG00000030714"}});
    orthology.insert({"ENST00000642948", std::set<std::string>{"ENSMUSG00000032818", "ENSHGLG00000006211", "ENSMFAG00000037181"}});
    orthology.insert({"ENST00000432901", std::set<std::string>{"ENSHGLG00000016254", "ENSMUSG00000098387", "ENSMFAG00000030963"}});
    orthology.insert({"ENST00000643092", std::set<std::string>{"ENSHGLG00000015009", "ENSMUSG00000024050", "ENSMFAG00000039361"}});
    orthology.insert({"ENST00000331056", std::set<std::string>{"ENSMUSG00000025386", "ENSMFAG00000034227", "ENSHGLG00000008357"}});
    orthology.insert({"ENST00000320201", std::set<std::string>{"ENSMFAG00000003988", "ENSMUSG00000029406", "ENSHGLG00000012008"}});
    orthology.insert({"ENST00000260746", std::set<std::string>{"ENSHGLG00000003244", "ENSMFAG00000045820", "ENSMUSG00000025035"}});
    orthology.insert({"ENST00000369902", std::set<std::string>{"ENSMFAG00000038634", "ENSHGLG00000002357", "ENSMUSG00000025231"}});
    orthology.insert({"ENST00000217182", std::set<std::string>{"ENSHGLG00000014996", "ENSMUSG00000016349", "ENSMFAG00000041810"}});
    orthology.insert({"ENST00000261811", std::set<std::string>{"ENSMFAG00000030823", "ENSHGLG00000012358", "ENSMUSG00000046727"}});
    orthology.insert({"ENST00000273368", std::set<std::string>{"ENSHGLG00000011857", "ENSMFAG00000001611", "ENSMUSG00000022658"}});
    orthology.insert({"ENST00000377603", std::set<std::string>{"ENSMUSG00000027427", "ENSHGLG00000011867", "ENSMFAG00000002227"}});
    orthology.insert({"ENST00000361070", std::set<std::string>{"ENSMUSG00000033596", "ENSMFAG00000043003", "ENSHGLG00000012627"}});
    orthology.insert({"ENST00000254976", std::set<std::string>{"ENSHGLG00000016926", "ENSMUSG00000027273", "ENSMFAG00000001652"}});
    orthology.insert({"ENST00000223459", std::set<std::string>{"ENSHGLG00000012152", "ENSMFAG00000033034", "ENSMUSG00000045251"}});
    orthology.insert({"ENST00000338074", std::set<std::string>{"ENSMFAG00000039873", "ENSMUSG00000027624", "ENSHGLG00000015523"}});
    orthology.insert({"ENST00000246186", std::set<std::string>{"ENSHGLG00000009467", "ENSMUSG00000027612", "ENSMFAG00000043972"}});
    orthology.insert({"ENST00000422113", std::set<std::string>{"ENSMUSG00000034310", "ENSMFAG00000001610", "ENSHGLG00000012993"}});
    orthology.insert({"ENST00000545712", std::set<std::string>{"ENSHGLG00000007791", "ENSMFAG00000036377", "ENSMUSG00000029575"}});
    orthology.insert({"ENST00000268797", std::set<std::string>{"ENSMUSG00000013150", "ENSHGLG00000011082", "ENSMFAG00000040849"}});
    orthology.insert({"ENST00000371132", std::set<std::string>{"ENSHGLG00000005872", "ENSMUSG00000027522", "ENSMFAG00000034376"}});
    orthology.insert({"ENST00000333383", std::set<std::string>{"ENSMFAG00000036585", "ENSHGLG00000004411", "ENSMUSG00000044034"}});
    orthology.insert({"ENST00000319296", std::set<std::string>{"ENSMUSG00000054716", "ENSHGLG00000013901", "ENSMFAG00000036200"}});
    orthology.insert({"ENST00000215739", std::set<std::string>{"ENSMFAG00000002308", "ENSHGLG00000000653", "ENSMUSG00000022761"}});
    orthology.insert({"ENST00000229328", std::set<std::string>{"ENSMUSG00000029513", "ENSHGLG00000007003", "ENSMFAG00000002388"}});
    orthology.insert({"ENST00000395547", std::set<std::string>{"ENSMFAG00000030590", "ENSHGLG00000010957", "ENSMUSG00000032637"}});
    orthology.insert({"ENST00000300413", std::set<std::string>{"ENSMFAG00000042080", "ENSMUSG00000002477", "ENSHGLG00000007152"}});
    orthology.insert({"ENST00000376285", std::set<std::string>{"ENSHGLG00000011057", "ENSMUSG00000041650", "ENSMFAG00000020427"}});
    orthology.insert({"ENST00000467148", std::set<std::string>{"ENSMUSG00000027580", "ENSHGLG00000013895", "ENSMFAG00000002329"}});
    orthology.insert({"ENST00000561796", std::set<std::string>{"ENSMFAG00000031444", "ENSHGLG00000012506", "ENSMUSG00000031872"}});
    orthology.insert({"ENST00000229340", std::set<std::string>{"ENSMFAG00000038261", "ENSMUSG00000029518", "ENSHGLG00000012703"}});
    orthology.insert({"ENST00000261741", std::set<std::string>{"ENSMFAG00000046091", "ENSMUSG00000029594", "ENSHGLG00000010899"}});
    orthology.insert({"ENST00000539276", std::set<std::string>{"ENSMFAG00000030226", "ENSMUSG00000029467", "ENSHGLG00000017656"}});
    orthology.insert({"ENST00000288912", std::set<std::string>{"ENSMFAG00000025564", "ENSMUSG00000029442", "ENSHGLG00000019047"}});
    orthology.insert({"ENST00000229390", std::set<std::string>{"ENSHGLG00000014372", "ENSMUSG00000029538", "ENSMFAG00000039423"}});
    orthology.insert({"ENST00000592875", std::set<std::string>{"ENSHGLG00000000825", "ENSMUSG00000024273", "ENSMFAG00000040105"}});
    orthology.insert({"ENST00000328439", std::set<std::string>{"ENSMUSG00000010505", "ENSMFAG00000041891", "ENSHGLG00000019065"}});
    orthology.insert({"ENST00000330342", std::set<std::string>{"ENSMFAG00000039847", "ENSHGLG00000016982", "ENSMUSG00000038023"}});
    orthology.insert({"ENST00000246069", std::set<std::string>{"ENSMUSG00000015932", "ENSHGLG00000017976", "ENSMFAG00000001053"}});
    orthology.insert({"ENST00000414069", std::set<std::string>{"ENSHGLG00000009527", "ENSMUSG00000045733", "ENSMFAG00000029744"}});
    orthology.insert({"ENST00000342427", std::set<std::string>{"ENSHGLG00000013786", "ENSMFAG00000045920", "ENSMUSG00000059842"}});
    orthology.insert({"ENST00000242592", std::set<std::string>{"ENSHGLG00000012611", "ENSMFAG00000001168", "ENSMUSG00000029545"}});
    orthology.insert({"ENST00000360807", std::set<std::string>{"ENSMFAG00000008658", "ENSMUSG00000027422", "ENSHGLG00000018289"}});
    orthology.insert({"ENST00000374492", std::set<std::string>{"ENSMUSG00000038312", "ENSMFAG00000002746", "ENSHGLG00000010475"}});
    orthology.insert({"ENST00000261448", std::set<std::string>{"ENSHGLG00000009604", "ENSMUSG00000027861", "ENSMFAG00000042482"}});
    orthology.insert({"ENST00000361582", std::set<std::string>{"ENSMUSG00000064061", "ENSHGLG00000014321", "ENSMFAG00000046238"}});
    orthology.insert({"ENST00000373187", std::set<std::string>{"ENSHGLG00000011912", "ENSMFAG00000002480", "ENSMUSG00000053141"}});
    orthology.insert({"ENST00000274721", std::set<std::string>{"ENSMFAG00000043925", "ENSMUSG00000024366", "ENSHGLG00000005227"}});
    orthology.insert({"ENST00000344949", std::set<std::string>{"ENSHGLG00000003046", "ENSMUSG00000022749", "ENSMFAG00000030957"}});
    orthology.insert({"ENST00000285311", std::set<std::string>{"ENSMFAG00000032422", "ENSHGLG00000002980", "ENSMUSG00000028031"}});
    orthology.insert({"ENST00000306688", std::set<std::string>{"ENSMUSG00000025145", "ENSHGLG00000006712", "ENSMFAG00000046218"}});
    orthology.insert({"ENST00000194118", std::set<std::string>{"ENSMUSG00000024442", "ENSMFAG00000040008", "ENSHGLG00000010824"}});
    orthology.insert({"ENST00000618838", std::set<std::string>{"ENSMFAG00000001321", "ENSMUSG00000038671", "ENSHGLG00000012078"}});
    orthology.insert({"ENST00000619791", std::set<std::string>{"ENSMUSG00000038384", "ENSMFAG00000030930", "ENSHGLG00000012063"}});
    orthology.insert({"ENST00000262487", std::set<std::string>{"ENSHGLG00000016081", "ENSMFAG00000003715", "ENSMUSG00000074766"}});
    orthology.insert({"ENST00000369983", std::set<std::string>{"ENSMUSG00000025224", "ENSMFAG00000002812", "ENSHGLG00000002115"}});
    orthology.insert({"ENST00000309909", std::set<std::string>{"ENSHGLG00000009495", "ENSMFAG00000035404", "ENSMUSG00000032867"}});
    orthology.insert({"ENST00000303596", std::set<std::string>{"ENSMUSG00000036442", "ENSMFAG00000030061", "ENSHGLG00000009864"}});
    orthology.insert({"ENST00000406189", std::set<std::string>{"ENSMUSG00000037253", "ENSHGLG00000004567", "ENSMFAG00000042267"}});
    orthology.insert({"ENST00000257209", std::set<std::string>{"ENSMUSG00000034295", "ENSMFAG00000041697", "ENSHGLG00000000428"}});
    orthology.insert({"ENST00000006750", std::set<std::string>{"ENSMFAG00000046403", "ENSHGLG00000009249", "ENSMUSG00000040592"}});
    orthology.insert({"ENST00000256649", std::set<std::string>{"ENSHGLG00000017735", "ENSMUSG00000033233", "ENSMFAG00000039230"}});
    orthology.insert({"ENST00000320185", std::set<std::string>{"ENSHGLG00000013482", "ENSMUSG00000025219", "ENSMFAG00000003751"}});
    orthology.insert({"ENST00000343075", std::set<std::string>{"ENSMUSG00000044339", "ENSMFAG00000003561", "ENSHGLG00000010740"}});
    orthology.insert({"ENST00000617316", std::set<std::string>{"ENSMFAG00000036297", "ENSHGLG00000017969", "ENSMUSG00000049686"}});
    orthology.insert({"ENST00000215095", std::set<std::string>{"ENSMFAG00000032411", "ENSHGLG00000011984", "ENSMUSG00000030806"}});
    orthology.insert({"ENST00000279392", std::set<std::string>{"ENSMUSG00000042606", "ENSHGLG00000009590", "ENSMFAG00000035629"}});
    orthology.insert({"ENST00000369422", std::set<std::string>{"ENSMUSG00000024979", "ENSMFAG00000036424", "ENSHGLG00000012176"}});
    orthology.insert({"ENST00000325167", std::set<std::string>{"ENSMFAG00000003684", "ENSMUSG00000025371", "ENSHGLG00000009561"}});
    orthology.insert({"ENST00000357650", std::set<std::string>{"ENSHGLG00000001503", "ENSMUSG00000054414", "ENSMFAG00000043538"}});
    orthology.insert({"ENST00000335209", std::set<std::string>{"ENSMUSG00000029359", "ENSHGLG00000018228", "ENSMFAG00000046337"}});
    orthology.insert({"ENST00000397333", std::set<std::string>{"ENSHGLG00000009892", "ENSMFAG00000031189", "ENSMUSG00000029504"}});
    orthology.insert({"ENST00000269143", std::set<std::string>{"ENSMFAG00000043221", "ENSHGLG00000007654", "ENSMUSG00000024527"}});
    orthology.insert({"ENST00000360872", std::set<std::string>{"ENSMFAG00000034107", "ENSHGLG00000012819", "ENSMUSG00000030742"}});
    orthology.insert({"ENST00000435607", std::set<std::string>{"ENSMUSG00000001027", "ENSHGLG00000005090", "ENSMFAG00000035414"}});
    orthology.insert({"ENST00000457416", std::set<std::string>{"ENSMFAG00000045752", "ENSMUSG00000030849", "ENSHGLG00000011201"}});
    orthology.insert({"ENST00000338437", std::set<std::string>{"ENSMUSG00000031883", "ENSMFAG00000042876", "ENSHGLG00000016917"}});
    orthology.insert({"ENST00000273347", std::set<std::string>{"ENSMFAG00000025111", "ENSMUSG00000075033", "ENSHGLG00000011899"}});
    orthology.insert({"ENST00000393992", std::set<std::string>{"ENSMUSG00000041679", "ENSHGLG00000019291", "ENSMFAG00000041969"}});
    orthology.insert({"ENST00000392521", std::set<std::string>{"ENSMFAG00000002139", "ENSHGLG00000010569", "ENSMUSG00000029516"}});
    orthology.insert({"ENST00000300784", std::set<std::string>{"ENSHGLG00000011612", "ENSMUSG00000025175", "ENSMFAG00000043920"}});
    orthology.insert({"ENST00000490035", std::set<std::string>{"ENSHGLG00000013507", "ENSMFAG00000037703", "ENSMUSG00000061080"}});
    orthology.insert({"ENST00000252997", std::set<std::string>{"ENSMUSG00000015627", "ENSHGLG00000006232", "ENSMFAG00000041967"}});
    orthology.insert({"ENST00000402868", std::set<std::string>{"ENSMFAG00000002095", "ENSMUSG00000049327", "ENSHGLG00000012225"}});
    orthology.insert({"ENST00000370110", std::set<std::string>{"ENSMUSG00000056209", "ENSHGLG00000019118", "ENSMFAG00000041878"}});
    orthology.insert({"ENST00000368679", std::set<std::string>{"ENSMUSG00000054555", "ENSMFAG00000039461", "ENSHGLG00000014915"}});
    orthology.insert({"ENST00000354981", std::set<std::string>{"ENSMFAG00000034145", "ENSMUSG00000038844", "ENSHGLG00000016849"}});
    orthology.insert({"ENST00000314586", std::set<std::string>{"ENSHGLG00000010315", "ENSMUSG00000043251", "ENSMFAG00000002581"}});
    orthology.insert({"ENST00000320805", std::set<std::string>{"ENSMUSG00000030722", "ENSMFAG00000028824", "ENSHGLG00000014293"}});
    orthology.insert({"ENST00000399002", std::set<std::string>{"ENSHGLG00000015963", "ENSMUSG00000039092", "ENSMFAG00000044897"}});
    orthology.insert({"ENST00000326495", std::set<std::string>{"ENSMFAG00000002904", "ENSMUSG00000042121", "ENSHGLG00000017730"}});
    orthology.insert({"ENST00000427980", std::set<std::string>{"ENSHGLG00000009837", "ENSMFAG00000029752", "ENSMUSG00000069895"}});
    orthology.insert({"ENST00000261368", std::set<std::string>{"ENSMFAG00000033060", "ENSHGLG00000004400", "ENSMUSG00000024534"}});
    orthology.insert({"ENST00000318663", std::set<std::string>{"ENSHGLG00000016905", "ENSMFAG00000037299", "ENSMUSG00000043964"}});
    orthology.insert({"ENST00000377873", std::set<std::string>{"ENSMUSG00000027420", "ENSHGLG00000009469", "ENSMFAG00000035524"}});
    orthology.insert({"ENST00000265165", std::set<std::string>{"ENSMFAG00000037201", "ENSHGLG00000011799", "ENSMUSG00000027985"}});
    orthology.insert({"ENST00000507153", std::set<std::string>{"ENSHGLG00000003404", "ENSMUSG00000091721", "ENSMFAG00000007005"}});
    orthology.insert({"ENST00000337940", std::set<std::string>{"ENSMUSG00000022809", "ENSHGLG00000011275", "ENSMFAG00000041037"}});
    orthology.insert({"ENST00000351817", std::set<std::string>{"ENSMUSG00000054160", "ENSMFAG00000044462", "ENSHGLG00000008824"}});
    orthology.insert({"ENST00000289004", std::set<std::string>{"ENSHGLG00000011686", "ENSMFAG00000046346", "ENSMUSG00000029445"}});
    orthology.insert({"ENST00000333254", std::set<std::string>{"ENSHGLG00000015360", "ENSMUSG00000025090", "ENSMFAG00000039541"}});
    orthology.insert({"ENST00000353479", std::set<std::string>{"ENSHGLG00000003598", "ENSMUSG00000025064", "ENSMFAG00000038498"}});
    orthology.insert({"ENST00000433542", std::set<std::string>{"ENSMFAG00000031262", "ENSMUSG00000022833", "ENSHGLG00000001004"}});
    orthology.insert({"ENST00000345057", std::set<std::string>{"ENSMFAG00000032725", "ENSMUSG00000031887", "ENSHGLG00000015996"}});
    orthology.insert({"ENST00000331758", std::set<std::string>{"ENSHGLG00000006752", "ENSMFAG00000038339", "ENSMUSG00000039086"}});
    orthology.insert({"ENST00000226021", std::set<std::string>{"ENSMFAG00000040283", "ENSHGLG00000000787", "ENSMUSG00000020722"}});
    orthology.insert({"ENST00000262873", std::set<std::string>{"ENSMUSG00000074652", "ENSMFAG00000044824", "ENSHGLG00000016112"}});
    orthology.insert({"ENST00000370033", std::set<std::string>{"ENSMUSG00000039901", "ENSHGLG00000002014", "ENSMFAG00000044833"}});
    orthology.insert({"ENST00000361384", std::set<std::string>{"ENSMFAG00000040983", "ENSHGLG00000013938", "ENSMUSG00000025077"}});
    orthology.insert({"ENST00000354673", std::set<std::string>{"ENSHGLG00000013963", "ENSMUSG00000022790", "ENSMFAG00000029911"}});
    orthology.insert({"ENST00000221730", std::set<std::string>{"ENSMFAG00000001020", "ENSHGLG00000006056", "ENSMUSG00000037577"}});
    orthology.insert({"ENST00000370339", std::set<std::string>{"ENSMUSG00000038848", "ENSMFAG00000042868", "ENSHGLG00000006585"}});
    orthology.insert({"ENST00000369248", std::set<std::string>{"ENSHGLG00000015578", "ENSMUSG00000033478", "ENSMFAG00000045717"}});
    orthology.insert({"ENST00000160827", std::set<std::string>{"ENSMFAG00000034567", "ENSHGLG00000006818", "ENSMUSG00000030677"}});
    orthology.insert({"ENST00000348257", std::set<std::string>{"ENSHGLG00000018043", "ENSMUSG00000000827", "ENSMFAG00000032949"}});
    orthology.insert({"ENST00000252999", std::set<std::string>{"ENSMFAG00000041365", "ENSHGLG00000006381", "ENSMUSG00000015647"}});
    orthology.insert({"ENST00000327554", std::set<std::string>{"ENSMUSG00000043913", "ENSMFAG00000003228", "ENSHGLG00000010014"}});
    orthology.insert({"ENST00000331738", std::set<std::string>{"ENSHGLG00000012470", "ENSMFAG00000036398", "ENSMUSG00000029422"}});
    orthology.insert({"ENST00000397558", std::set<std::string>{"ENSHGLG00000014394", "ENSMUSG00000041609", "ENSMFAG00000003401"}});
    orthology.insert({"ENST00000341893", std::set<std::string>{"ENSMUSG00000022604", "ENSMFAG00000045770", "ENSHGLG00000002015"}});
    orthology.insert({"ENST00000265174", std::set<std::string>{"ENSHGLG00000001783", "ENSMFAG00000032785", "ENSMUSG00000028032"}});
    orthology.insert({"ENST00000455511", std::set<std::string>{"ENSHGLG00000018047", "ENSMUSG00000029466", "ENSMFAG00000030528"}});
    orthology.insert({"ENST00000310260", std::set<std::string>{"ENSHGLG00000016399", "ENSMUSG00000027860", "ENSMFAG00000000860"}});
    orthology.insert({"ENST00000338779", std::set<std::string>{"ENSMUSG00000033763", "ENSMFAG00000003097", "ENSHGLG00000009708"}});
    orthology.insert({"ENST00000262866", std::set<std::string>{"ENSMUSG00000027636", "ENSHGLG00000015293", "ENSMFAG00000002035"}});
    orthology.insert({"ENST00000333274", std::set<std::string>{"ENSHGLG00000014327", "ENSMFAG00000000459", "ENSMUSG00000048915"}});
    orthology.insert({"ENST00000358906", std::set<std::string>{"ENSMUSG00000041930", "ENSMFAG00000035632", "ENSHGLG00000010113"}});
    orthology.insert({"ENST00000338040", std::set<std::string>{"ENSMUSG00000047746", "ENSMFAG00000043265", "ENSHGLG00000010736"}});
    orthology.insert({"ENST00000372999", std::set<std::string>{"ENSMUSG00000074607", "ENSMFAG00000036799", "ENSHGLG00000006575"}});
    orthology.insert({"ENST00000300835", std::set<std::string>{"ENSMFAG00000037718", "ENSMUSG00000030822", "ENSHGLG00000010831"}});
    orthology.insert({"ENST00000239032", std::set<std::string>{"ENSHGLG00000009873", "ENSMUSG00000045052", "ENSMFAG00000030136"}});
    orthology.insert({"ENST00000257430", std::set<std::string>{"ENSHGLG00000009943", "ENSMUSG00000005871", "ENSMFAG00000041277"}});
    orthology.insert({"ENST00000398250", std::set<std::string>{"ENSMUSG00000070366", "ENSHGLG00000012927", "ENSMFAG00000037481"}});
    orthology.insert({"ENST00000329875", std::set<std::string>{"ENSHGLG00000007472", "ENSMUSG00000025140", "ENSMFAG00000040932"}});
    orthology.insert({"ENST00000359213", std::set<std::string>{"ENSMFAG00000003907", "ENSMUSG00000022793", "ENSHGLG00000013654"}});
    orthology.insert({"ENST00000268793", std::set<std::string>{"ENSHGLG00000013542", "ENSMUSG00000031898", "ENSMFAG00000037108"}});
    orthology.insert({"ENST00000383673", std::set<std::string>{"ENSHGLG00000018420", "ENSMUSG00000022705", "ENSMFAG00000037060"}});
    orthology.insert({"ENST00000410092", std::set<std::string>{"ENSMFAG00000001815", "ENSHGLG00000004155", "ENSMUSG00000024533"}});
    orthology.insert({"ENST00000333676", std::set<std::string>{"ENSHGLG00000009470", "ENSMUSG00000039640", "ENSMFAG00000042253"}});
    orthology.insert({"ENST00000243878", std::set<std::string>{"ENSHGLG00000014665", "ENSMUSG00000013155", "ENSMFAG00000031412"}});
    orthology.insert({"ENST00000375483", std::set<std::string>{"ENSMUSG00000074665", "ENSHGLG00000017159", "ENSMFAG00000030797"}});
    orthology.insert({"ENST00000261769", std::set<std::string>{"ENSHGLG00000012016", "ENSMUSG00000000303", "ENSMFAG00000032434"}});
    orthology.insert({"ENST00000279068", std::set<std::string>{"ENSHGLG00000015055", "ENSMFAG00000041479", "ENSMUSG00000039108"}});
    orthology.insert({"ENST00000261772", std::set<std::string>{"ENSHGLG00000011756", "ENSMUSG00000031960", "ENSMFAG00000002309"}});
    orthology.insert({"ENST00000261486", std::set<std::string>{"ENSMFAG00000000281", "ENSMUSG00000024376", "ENSHGLG00000005035"}});
    orthology.insert({"ENST00000374864", std::set<std::string>{"ENSMUSG00000027598", "ENSHGLG00000005001", "ENSMFAG00000041734"}});
    orthology.insert({"ENST00000307139", std::set<std::string>{"ENSMUSG00000040373", "ENSHGLG00000000830", "ENSMFAG00000002102"}});
    orthology.insert({"ENST00000281938", std::set<std::string>{"ENSHGLG00000011316", "ENSMFAG00000007246", "ENSMUSG00000041548"}});
    orthology.insert({"ENST00000454402", std::set<std::string>{"ENSMFAG00000044172", "ENSHGLG00000016340", "ENSMUSG00000029363"}});
    orthology.insert({"ENST00000310227", std::set<std::string>{"ENSHGLG00000021265", "ENSMUSG00000068154", "ENSMFAG00000000035"}});
    orthology.insert({"ENST00000493442", std::set<std::string>{"ENSHGLG00000012070", "ENSMUSG00000042595", "ENSMFAG00000000454"}});
    orthology.insert({"ENST00000261776", std::set<std::string>{"ENSHGLG00000009916", "ENSMUSG00000010936", "ENSMFAG00000040036"}});
    orthology.insert({"ENST00000225512", std::set<std::string>{"ENSHGLG00000008511", "ENSMFAG00000030050", "ENSMUSG00000000125"}});
    orthology.insert({"ENST00000262879", std::set<std::string>{"ENSMUSG00000027652", "ENSHGLG00000012527", "ENSMFAG00000039697"}});
    orthology.insert({"ENST00000338482", std::set<std::string>{"ENSMFAG00000030892", "ENSMUSG00000035930", "ENSHGLG00000020785"}});
    orthology.insert({"ENST00000442544", std::set<std::string>{"ENSHGLG00000005265", "ENSMFAG00000033415", "ENSMUSG00000060534"}});
    orthology.insert({"ENST00000332884", std::set<std::string>{"ENSMFAG00000003841", "ENSHGLG00000000911", "ENSMUSG00000027983"}});
    orthology.insert({"ENST00000257552", std::set<std::string>{"ENSMFAG00000001798", "ENSHGLG00000012782", "ENSMUSG00000054256"}});
    orthology.insert({"ENST00000306010", std::set<std::string>{"ENSMUSG00000054612", "ENSHGLG00000014053", "ENSMFAG00000003124"}});
    orthology.insert({"ENST00000342494", std::set<std::string>{"ENSHGLG00000010291", "ENSMUSG00000029577", "ENSMFAG00000032022"}});
    orthology.insert({"ENST00000342988", std::set<std::string>{"ENSMUSG00000024515", "ENSHGLG00000005758", "ENSMFAG00000037003"}});
    orthology.insert({"ENST00000299697", std::set<std::string>{"ENSMUSG00000035824", "ENSHGLG00000012386", "ENSMFAG00000035489"}});
    orthology.insert({"ENST00000371168", std::set<std::string>{"ENSHGLG00000019072", "ENSMUSG00000027518", "ENSMFAG00000032352"}});
    orthology.insert({"ENST00000355044", std::set<std::string>{"ENSHGLG00000017069", "ENSMUSG00000054843", "ENSMFAG00000003582"}});
    orthology.insert({"ENST00000269162", std::set<std::string>{"ENSHGLG00000017590", "ENSMUSG00000024524", "ENSMFAG00000044213"}});
    orthology.insert({"ENST00000288071", std::set<std::string>{"ENSMUSG00000033658", "ENSHGLG00000009955", "ENSMFAG00000037902"}});
    orthology.insert({"ENST00000591655", std::set<std::string>{"ENSMUSG00000025091", "ENSHGLG00000015278", "ENSMFAG00000000722"}});
    orthology.insert({"ENST00000447459", std::set<std::string>{"ENSMFAG00000034217", "ENSHGLG00000014257", "ENSMUSG00000046182"}});
    orthology.insert({"ENST00000295633", std::set<std::string>{"ENSMUSG00000022816", "ENSHGLG00000016844", "ENSMFAG00000036133"}});
    orthology.insert({"ENST00000409678", std::set<std::string>{"ENSMUSG00000042988", "ENSMFAG00000033597", "ENSHGLG00000008451"}});
    orthology.insert({"ENST00000298472", std::set<std::string>{"ENSHGLG00000012362", "ENSMFAG00000031383", "ENSMUSG00000025094"}});
    orthology.insert({"ENST00000304372", std::set<std::string>{"ENSMUSG00000051648", "ENSMFAG00000019930", "ENSHGLG00000012309"}});
    orthology.insert({"ENST00000372980", std::set<std::string>{"ENSMFAG00000002372", "ENSMUSG00000017817", "ENSHGLG00000005156"}});
    orthology.insert({"ENST00000392465", std::set<std::string>{"ENSHGLG00000013371", "ENSMUSG00000029474", "ENSMFAG00000037026"}});
    orthology.insert({"ENST00000219343", std::set<std::string>{"ENSMUSG00000031904", "ENSHGLG00000011571", "ENSMFAG00000038675"}});
    orthology.insert({"ENST00000332298", std::set<std::string>{"ENSHGLG00000010844", "ENSMFAG00000032913", "ENSMUSG00000002458"}});
    orthology.insert({"ENST00000392339", std::set<std::string>{"ENSMUSG00000025161", "ENSMFAG00000038739", "ENSHGLG00000009036"}});
    orthology.insert({"ENST00000369800", std::set<std::string>{"ENSMFAG00000045555", "ENSMUSG00000034413", "ENSHGLG00000006017"}});
    orthology.insert({"ENST00000357997", std::set<std::string>{"ENSMFAG00000041129", "ENSMUSG00000029501", "ENSHGLG00000019557"}});
    orthology.insert({"ENST00000336990", std::set<std::string>{"ENSHGLG00000003941", "ENSMUSG00000024530", "ENSMFAG00000042024"}});
    orthology.insert({"ENST00000435159", std::set<std::string>{"ENSMUSG00000034324", "ENSHGLG00000010846", "ENSMFAG00000034398"}});
    orthology.insert({"ENST00000315033", std::set<std::string>{"ENSMFAG00000037976", "ENSHGLG00000001346", "ENSMUSG00000068696"}});
    orthology.insert({"ENST00000398023", std::set<std::string>{"ENSMUSG00000073804", "ENSMFAG00000044481", "ENSHGLG00000011458"}});
    orthology.insert({"ENST00000278025", std::set<std::string>{"ENSMUSG00000025466", "ENSMFAG00000001044", "ENSHGLG00000011771"}});
    orthology.insert({"ENST00000369755", std::set<std::string>{"ENSMFAG00000007328", "ENSMUSG00000025060", "ENSHGLG00000003084"}});
    orthology.insert({"ENST00000261822", std::set<std::string>{"ENSHGLG00000016795", "ENSMFAG00000045274", "ENSMUSG00000029438"}});
    orthology.insert({"ENST00000374408", std::set<std::string>{"ENSHGLG00000006814", "ENSMFAG00000038878", "ENSMUSG00000074647"}});
    orthology.insert({"ENST00000374385", std::set<std::string>{"ENSMFAG00000034648", "ENSHGLG00000017446", "ENSMUSG00000005882"}});
    orthology.insert({"ENST00000375494", std::set<std::string>{"ENSMUSG00000068008", "ENSMFAG00000042929", "ENSHGLG00000015993"}});
    orthology.insert({"ENST00000619189", std::set<std::string>{"ENSMFAG00000036086", "ENSMUSG00000074749", "ENSHGLG00000014057"}});
    orthology.insert({"ENST00000305596", std::set<std::string>{"ENSMFAG00000038725", "ENSMUSG00000042502", "ENSHGLG00000011413"}});
    orthology.insert({"ENST00000237530", std::set<std::string>{"ENSHGLG00000004999", "ENSMFAG00000030858", "ENSMUSG00000027642"}});
    orthology.insert({"ENST00000290953", std::set<std::string>{"ENSHGLG00000010211", "ENSMFAG00000035580", "ENSMUSG00000005705"}});
    orthology.insert({"ENST00000262127", std::set<std::string>{"ENSHGLG00000004772", "ENSMFAG00000045482", "ENSMUSG00000073542"}});
    orthology.insert({"ENST00000337929", std::set<std::string>{"ENSMUSG00000030745", "ENSMFAG00000001191", "ENSHGLG00000009384"}});
    orthology.insert({"ENST00000263461", std::set<std::string>{"ENSHGLG00000010871", "ENSMFAG00000031615", "ENSMUSG00000042055"}});
    orthology.insert({"ENST00000310346", std::set<std::string>{"ENSHGLG00000016202", "ENSMUSG00000018263", "ENSMFAG00000044723"}});
    orthology.insert({"ENST00000240851", std::set<std::string>{"ENSMFAG00000043877", "ENSMUSG00000022757", "ENSHGLG00000008981"}});
    orthology.insert({"ENST00000369966", std::set<std::string>{"ENSHGLG00000007237", "ENSMUSG00000025225", "ENSMFAG00000031139"}});
    orthology.insert({"ENST00000393997", std::set<std::string>{"ENSMUSG00000014791", "ENSMFAG00000038390", "ENSHGLG00000014154"}});
    orthology.insert({"ENST00000268296", std::set<std::string>{"ENSMFAG00000032646", "ENSHGLG00000010419", "ENSMUSG00000030789"}});
    orthology.insert({"ENST00000262547", std::set<std::string>{"ENSHGLG00000015592", "ENSMFAG00000041179", "ENSMUSG00000037259"}});
    orthology.insert({"ENST00000457363", std::set<std::string>{"ENSMUSG00000027517", "ENSMFAG00000003716", "ENSHGLG00000018014"}});
    orthology.insert({"ENST00000369503", std::set<std::string>{"ENSMFAG00000042672", "ENSMUSG00000033147", "ENSHGLG00000011061"}});
    orthology.insert({"ENST00000261819", std::set<std::string>{"ENSMUSG00000029472", "ENSMFAG00000038352", "ENSHGLG00000010573"}});
    orthology.insert({"ENST00000280571", std::set<std::string>{"ENSHGLG00000017942", "ENSMFAG00000034620", "ENSMUSG00000029401"}});
    orthology.insert({"ENST00000542869", std::set<std::string>{"ENSMUSG00000038751", "ENSHGLG00000015374", "ENSMFAG00000042934"}});
    orthology.insert({"ENST00000399167", std::set<std::string>{"ENSMUSG00000022763", "ENSHGLG00000001645", "ENSMFAG00000009725"}});
    orthology.insert({"ENST00000330498", std::set<std::string>{"ENSHGLG00000012248", "ENSMUSG00000030781", "ENSMFAG00000002366"}});
    orthology.insert({"ENST00000353963", std::set<std::string>{"ENSMFAG00000002527", "ENSHGLG00000007699", "ENSMUSG00000024354"}});
    orthology.insert({"ENST00000355528", std::set<std::string>{"ENSMUSG00000039230", "ENSHGLG00000012612", "ENSMFAG00000034311"}});
    orthology.insert({"ENST00000268483", std::set<std::string>{"ENSMFAG00000043897", "ENSMUSG00000031723", "ENSHGLG00000012318"}});
    orthology.insert({"ENST00000361733", std::set<std::string>{"ENSHGLG00000017968", "ENSMFAG00000033252", "ENSMUSG00000020700"}});
    orthology.insert({"ENST00000252945", std::set<std::string>{"ENSMFAG00000044389", "ENSMUSG00000025479", "ENSHGLG00000017022"}});
    orthology.insert({"ENST00000377026", std::set<std::string>{"ENSHGLG00000016842", "ENSMUSG00000027438", "ENSMFAG00000012865"}});
    orthology.insert({"ENST00000086933", std::set<std::string>{"ENSHGLG00000000434", "ENSMFAG00000026310", "ENSMUSG00000022738"}});
    orthology.insert({"ENST00000319441", std::set<std::string>{"ENSMUSG00000027513", "ENSHGLG00000018888", "ENSMFAG00000043755"}});
    orthology.insert({"ENST00000264852", std::set<std::string>{"ENSHGLG00000012121", "ENSMFAG00000031280", "ENSMUSG00000022696"}});
    orthology.insert({"ENST00000359646", std::set<std::string>{"ENSMUSG00000089824", "ENSHGLG00000013208", "ENSMFAG00000032583"}});
    orthology.insert({"ENST00000369397", std::set<std::string>{"ENSHGLG00000012013", "ENSMFAG00000043191", "ENSMUSG00000024985"}});
    orthology.insert({"ENST00000355624", std::set<std::string>{"ENSMFAG00000000822", "ENSMUSG00000040022", "ENSHGLG00000010515"}});
    orthology.insert({"ENST00000288022", std::set<std::string>{"ENSMUSG00000078931", "ENSHGLG00000017493", "ENSMFAG00000030620"}});
    orthology.insert({"ENST00000327674", std::set<std::string>{"ENSHGLG00000001481", "ENSMFAG00000046317", "ENSMUSG00000031271"}});
    orthology.insert({"ENST00000614565", std::set<std::string>{"ENSMUSG00000000305", "ENSMFAG00000042158", "ENSHGLG00000014952"}});
    orthology.insert({"ENST00000376862", std::set<std::string>{"ENSMUSG00000074736", "ENSHGLG00000001156", "ENSMFAG00000001861"}});
    orthology.insert({"ENST00000253079", std::set<std::string>{"ENSMFAG00000043307", "ENSMUSG00000061882", "ENSHGLG00000010989"}});
    orthology.insert({"ENST00000380412", std::set<std::string>{"ENSHGLG00000010373", "ENSMFAG00000000769", "ENSMUSG00000047371"}});
    orthology.insert({"ENST00000296422", std::set<std::string>{"ENSMFAG00000042668", "ENSHGLG00000003170", "ENSMUSG00000050150"}});
    orthology.insert({"ENST00000155674", std::set<std::string>{"ENSMFAG00000044272", "ENSMUSG00000058979", "ENSHGLG00000010684"}});
    orthology.insert({"ENST00000336283", std::set<std::string>{"ENSMUSG00000006050", "ENSMFAG00000007347", "ENSHGLG00000010259"}});
    orthology.insert({"ENST00000348547", std::set<std::string>{"ENSMFAG00000037850", "ENSHGLG00000005886", "ENSMUSG00000005881"}});
    orthology.insert({"ENST00000243213", std::set<std::string>{"ENSMUSG00000031289", "ENSHGLG00000001104", "ENSMFAG00000003923"}});
    orthology.insert({"ENST00000400404", std::set<std::string>{"ENSMFAG00000008702", "ENSHGLG00000006276", "ENSMUSG00000091519"}});
    orthology.insert({"ENST00000388822", std::set<std::string>{"ENSMFAG00000045633", "ENSMUSG00000028114", "ENSHGLG00000014068"}});
    orthology.insert({"ENST00000535628", std::set<std::string>{"ENSMUSG00000044646", "ENSMFAG00000031667", "ENSHGLG00000004464"}});
    orthology.insert({"ENST00000537592", std::set<std::string>{"ENSHGLG00000000824", "ENSMFAG00000031402", "ENSMUSG00000024565"}});
    orthology.insert({"ENST00000299308", std::set<std::string>{"ENSMUSG00000070498", "ENSHGLG00000014151", "ENSMFAG00000006929"}});
    orthology.insert({"ENST00000360187", std::set<std::string>{"ENSMFAG00000003678", "ENSHGLG00000011502", "ENSMUSG00000023284"}});
    orthology.insert({"ENST00000254998", std::set<std::string>{"ENSMUSG00000036992", "ENSMFAG00000019296", "ENSHGLG00000007882"}});
    orthology.insert({"ENST00000255006", std::set<std::string>{"ENSMFAG00000002995", "ENSMUSG00000001768", "ENSHGLG00000005895"}});
    orthology.insert({"ENST00000359543", std::set<std::string>{"ENSMFAG00000004586", "ENSMUSG00000022505", "ENSHGLG00000008549"}});
    orthology.insert({"ENST00000342560", std::set<std::string>{"ENSMUSG00000017943", "ENSMFAG00000031122", "ENSHGLG00000004611"}});
    orthology.insert({"ENST00000432564", std::set<std::string>{"ENSMFAG00000028540", "ENSMUSG00000049241", "ENSHGLG00000021171"}});
    orthology.insert({"ENST00000361544", std::set<std::string>{"ENSMFAG00000000724", "ENSMUSG00000033502", "ENSHGLG00000002707"}});
    orthology.insert({"ENST00000266068", std::set<std::string>{"ENSMUSG00000038705", "ENSHGLG00000007639", "ENSMFAG00000036780"}});
    orthology.insert({"ENST00000231484", std::set<std::string>{"ENSHGLG00000003799", "ENSMFAG00000036923", "ENSMUSG00000024440"}});
    orthology.insert({"ENST00000257549", std::set<std::string>{"ENSHGLG00000009006", "ENSMFAG00000041743", "ENSMUSG00000029597"}});
    orthology.insert({"ENST00000319172", std::set<std::string>{"ENSMFAG00000046062", "ENSHGLG00000012973", "ENSMUSG00000002845"}});
    orthology.insert({"ENST00000266771", std::set<std::string>{"ENSMFAG00000039467", "ENSHGLG00000010992", "ENSMUSG00000029416"}});
    orthology.insert({"ENST00000246006", std::set<std::string>{"ENSMFAG00000043644", "ENSHGLG00000005436", "ENSMUSG00000027435"}});
    orthology.insert({"ENST00000264001", std::set<std::string>{"ENSMFAG00000032896", "ENSHGLG00000012002", "ENSMUSG00000054400"}});
    orthology.insert({"ENST00000311127", std::set<std::string>{"ENSHGLG00000016690", "ENSMFAG00000002554", "ENSMUSG00000075254"}});
    orthology.insert({"ENST00000305815", std::set<std::string>{"ENSHGLG00000017598", "ENSMFAG00000037571", "ENSMUSG00000033210"}});
    orthology.insert({"ENST00000409790", std::set<std::string>{"ENSHGLG00000017875", "ENSMFAG00000001961", "ENSMUSG00000068663"}});
    orthology.insert({"ENST00000215730", std::set<std::string>{"ENSMUSG00000022765", "ENSMFAG00000002747", "ENSHGLG00000015757"}});
    orthology.insert({"ENST00000279024", std::set<std::string>{"ENSMUSG00000037813", "ENSMFAG00000043256", "ENSHGLG00000016288"}});
    orthology.insert({"ENST00000283882", std::set<std::string>{"ENSHGLG00000010445", "ENSMUSG00000031954", "ENSMFAG00000031867"}});
    orthology.insert({"ENST00000306796", std::set<std::string>{"ENSMUSG00000025155", "ENSHGLG00000010316", "ENSMFAG00000001187"}});
    orthology.insert({"ENST00000279394", std::set<std::string>{"ENSMUSG00000059981", "ENSMFAG00000030440", "ENSHGLG00000010247"}});
    orthology.insert({"ENST00000357003", std::set<std::string>{"ENSMFAG00000039321", "ENSHGLG00000011111", "ENSMUSG00000002844"}});
    orthology.insert({"ENST00000261729", std::set<std::string>{"ENSMFAG00000016595", "ENSHGLG00000013250", "ENSMUSG00000029602"}});
    orthology.insert({"ENST00000394106", std::set<std::string>{"ENSMFAG00000043754", "ENSMUSG00000096188", "ENSHGLG00000010963"}});
    orthology.insert({"ENST00000258975", std::set<std::string>{"ENSMUSG00000001983", "ENSHGLG00000018941", "ENSMFAG00000033066"}});
    orthology.insert({"ENST00000296666", std::set<std::string>{"ENSMUSG00000024594", "ENSHGLG00000007825", "ENSMFAG00000044127"}});
    orthology.insert({"ENST00000256429", std::set<std::string>{"ENSMUSG00000024513", "ENSMFAG00000030736", "ENSHGLG00000006906"}});
    orthology.insert({"ENST00000343380", std::set<std::string>{"ENSMFAG00000042416", "ENSMUSG00000027490", "ENSHGLG00000009301"}});
    orthology.insert({"ENST00000353546", std::set<std::string>{"ENSMUSG00000027575", "ENSMFAG00000045918", "ENSHGLG00000008445"}});
    orthology.insert({"ENST00000239938", std::set<std::string>{"ENSHGLG00000004336", "ENSMFAG00000027911", "ENSMUSG00000038418"}});
    orthology.insert({"ENST00000377115", std::set<std::string>{"ENSMFAG00000002341", "ENSMUSG00000037025", "ENSHGLG00000017308"}});
    orthology.insert({"ENST00000299238", std::set<std::string>{"ENSMUSG00000074811", "ENSHGLG00000020621", "ENSMFAG00000040457"}});
    orthology.insert({"ENST00000563588", std::set<std::string>{"ENSHGLG00000012110", "ENSMUSG00000030815", "ENSMFAG00000004011"}});
    orthology.insert({"ENST00000217133", std::set<std::string>{"ENSMFAG00000038605", "ENSMUSG00000016255", "ENSHGLG00000007606"}});
    orthology.insert({"ENST00000313511", std::set<std::string>{"ENSMFAG00000033739", "ENSMUSG00000073838", "ENSHGLG00000006613"}});
    orthology.insert({"ENST00000219797", std::set<std::string>{"ENSHGLG00000016838", "ENSMFAG00000030391", "ENSMUSG00000030801"}});
    orthology.insert({"ENST00000564719", std::set<std::string>{"ENSHGLG00000015376", "ENSMFAG00000038413", "ENSMUSG00000050875"}});
    orthology.insert({"ENST00000314583", std::set<std::string>{"ENSHGLG00000019092", "ENSMFAG00000039904", "ENSMUSG00000022831"}});
    orthology.insert({"ENST00000257575", std::set<std::string>{"ENSMFAG00000033209", "ENSMUSG00000032850", "ENSHGLG00000011047"}});
    orthology.insert({"ENST00000335255", std::set<std::string>{"ENSMFAG00000044739", "ENSHGLG00000009479", "ENSMUSG00000039275"}});
    orthology.insert({"ENST00000336431", std::set<std::string>{"ENSMFAG00000046311", "ENSMUSG00000027603", "ENSHGLG00000007389"}});
    orthology.insert({"ENST00000266079", std::set<std::string>{"ENSMUSG00000002455", "ENSHGLG00000009222", "ENSMFAG00000037542"}});
    orthology.insert({"ENST00000393203", std::set<std::string>{"ENSMFAG00000038301", "ENSMUSG00000027864", "ENSHGLG00000019106"}});
    orthology.insert({"ENST00000375238", std::set<std::string>{"ENSHGLG00000009659", "ENSMUSG00000027489", "ENSMFAG00000035873"}});
    orthology.insert({"ENST00000278780", std::set<std::string>{"ENSHGLG00000016810", "ENSMFAG00000021726", "ENSMUSG00000037279"}});
    orthology.insert({"ENST00000602795", std::set<std::string>{"ENSMFAG00000002141", "ENSHGLG00000007894", "ENSMUSG00000016253"}});
    orthology.insert({"ENST00000066544", std::set<std::string>{"ENSHGLG00000016008", "ENSMFAG00000044332", "ENSMUSG00000020687"}});
    orthology.insert({"ENST00000369075", std::set<std::string>{"ENSMUSG00000055319", "ENSMFAG00000042549", "ENSHGLG00000013752"}});
    orthology.insert({"ENST00000369516", std::set<std::string>{"ENSMFAG00000039698", "ENSMUSG00000027858", "ENSHGLG00000010786"}});
    orthology.insert({"ENST00000388920", std::set<std::string>{"ENSMFAG00000042510", "ENSHGLG00000010615", "ENSMUSG00000048377"}});
    orthology.insert({"ENST00000202816", std::set<std::string>{"ENSHGLG00000011505", "ENSMUSG00000045624", "ENSMFAG00000036841"}});
    orthology.insert({"ENST00000284690", std::set<std::string>{"ENSHGLG00000013097", "ENSMUSG00000030986", "ENSMFAG00000045315"}});
    orthology.insert({"ENST00000299759", std::set<std::string>{"ENSHGLG00000016885", "ENSMUSG00000031880", "ENSMFAG00000032485"}});
    orthology.insert({"ENST00000369486", std::set<std::string>{"ENSMUSG00000042035", "ENSHGLG00000018539", "ENSMFAG00000000910"}});
    orthology.insert({"ENST00000334529", std::set<std::string>{"ENSHGLG00000017114", "ENSMUSG00000052013", "ENSMFAG00000003080"}});
    orthology.insert({"ENST00000162330", std::set<std::string>{"ENSHGLG00000017063", "ENSMUSG00000031955", "ENSMFAG00000035344"}});
    orthology.insert({"ENST00000369518", std::set<std::string>{"ENSMFAG00000043913", "ENSHGLG00000006103", "ENSMUSG00000027855"}});
    orthology.insert({"ENST00000394767", std::set<std::string>{"ENSMUSG00000044365", "ENSHGLG00000000660", "ENSMFAG00000005031"}});
    orthology.insert({"ENST00000344651", std::set<std::string>{"ENSHGLG00000012981", "ENSMFAG00000039526", "ENSMUSG00000046562"}});
    orthology.insert({"ENST00000553456", std::set<std::string>{"ENSMFAG00000041699", "ENSMUSG00000043969", "ENSHGLG00000012841"}});
    orthology.insert({"ENST00000374809", std::set<std::string>{"ENSMUSG00000038375", "ENSMFAG00000044569", "ENSHGLG00000007281"}});
    orthology.insert({"ENST00000341446", std::set<std::string>{"ENSMFAG00000041745", "ENSHGLG00000018757", "ENSMUSG00000037905"}});
    orthology.insert({"ENST00000274711", std::set<std::string>{"ENSMFAG00000039611", "ENSHGLG00000017761", "ENSMUSG00000071862"}});
    orthology.insert({"ENST00000337743", std::set<std::string>{"ENSMFAG00000036407", "ENSHGLG00000016276", "ENSMUSG00000039033"}});
    orthology.insert({"ENST00000304800", std::set<std::string>{"ENSMUSG00000014856", "ENSHGLG00000015097", "ENSMFAG00000042618"}});
    orthology.insert({"ENST00000216951", std::set<std::string>{"ENSMUSG00000027610", "ENSMFAG00000042365", "ENSHGLG00000013619"}});
    orthology.insert({"ENST00000254900", std::set<std::string>{"ENSMUSG00000003778", "ENSMFAG00000039211", "ENSHGLG00000008574"}});
    orthology.insert({"ENST00000311893", std::set<std::string>{"ENSMFAG00000045386", "ENSHGLG00000012770", "ENSMUSG00000025825"}});
    orthology.insert({"ENST00000321280", std::set<std::string>{"ENSMUSG00000025372", "ENSHGLG00000004417", "ENSMFAG00000043088"}});
    orthology.insert({"ENST00000217407", std::set<std::string>{"ENSHGLG00000015403", "ENSMUSG00000016024", "ENSMFAG00000033400"}});
    orthology.insert({"ENST00000261653", std::set<std::string>{"ENSHGLG00000017019", "ENSMFAG00000044704", "ENSMUSG00000029428"}});
    orthology.insert({"ENST00000274710", std::set<std::string>{"ENSMUSG00000024347", "ENSHGLG00000008076", "ENSMFAG00000035669"}});
    orthology.insert({"ENST00000370053", std::set<std::string>{"ENSHGLG00000008593", "ENSMFAG00000044092", "ENSMUSG00000027581"}});
    orthology.insert({"ENST00000407847", std::set<std::string>{"ENSMUSG00000069378", "ENSMFAG00000002537", "ENSHGLG00000015857"}});
    orthology.insert({"ENST00000246020", std::set<std::string>{"ENSMUSG00000055177", "ENSHGLG00000016858", "ENSMFAG00000031737"}});
    orthology.insert({"ENST00000302628", std::set<std::string>{"ENSMUSG00000003657", "ENSHGLG00000017124", "ENSMFAG00000045637"}});
    orthology.insert({"ENST00000356126", std::set<std::string>{"ENSMUSG00000020720", "ENSMFAG00000032701", "ENSHGLG00000000655"}});
    orthology.insert({"ENST00000263025", std::set<std::string>{"ENSMUSG00000063065", "ENSMFAG00000042040", "ENSHGLG00000012077"}});
    orthology.insert({"ENST00000340356", std::set<std::string>{"ENSHGLG00000014903", "ENSMUSG00000046470", "ENSMFAG00000037045"}});
    orthology.insert({"ENST00000370141", std::set<std::string>{"ENSHGLG00000002164", "ENSMUSG00000033439", "ENSMFAG00000034681"}});
    orthology.insert({"ENST00000261326", std::set<std::string>{"ENSMFAG00000031865", "ENSMUSG00000039616", "ENSHGLG00000001785"}});
    orthology.insert({"ENST00000316099", std::set<std::string>{"ENSMUSG00000017950", "ENSMFAG00000035660", "ENSHGLG00000009505"}});
    orthology.insert({"ENST00000355962", std::set<std::string>{"ENSHGLG00000012596", "ENSMFAG00000040591", "ENSMUSG00000001670"}});
    orthology.insert({"ENST00000285093", std::set<std::string>{"ENSMFAG00000040240", "ENSHGLG00000008021", "ENSMUSG00000036880"}});
    orthology.insert({"ENST00000549578", std::set<std::string>{"ENSMFAG00000002612", "ENSHGLG00000011420", "ENSMUSG00000029462"}});
    orthology.insert({"ENST00000269468", std::set<std::string>{"ENSHGLG00000008740", "ENSMFAG00000026335", "ENSMUSG00000024561"}});
    orthology.insert({"ENST00000302243", std::set<std::string>{"ENSHGLG00000011681", "ENSMUSG00000015023", "ENSMFAG00000030922"}});
    orthology.insert({"ENST00000217381", std::set<std::string>{"ENSHGLG00000006583", "ENSMFAG00000039231", "ENSMUSG00000027488"}});
    orthology.insert({"ENST00000337233", std::set<std::string>{"ENSMUSG00000029470", "ENSHGLG00000012894", "ENSMFAG00000041150"}});
    orthology.insert({"ENST00000283027", std::set<std::string>{"ENSMUSG00000022503", "ENSHGLG00000010680", "ENSMFAG00000000452"}});
    orthology.insert({"ENST00000306869", std::set<std::string>{"ENSMFAG00000030901", "ENSMUSG00000039450", "ENSHGLG00000010061"}});
    orthology.insert({"ENST00000358522", std::set<std::string>{"ENSMUSG00000060275", "ENSHGLG00000009431", "ENSMFAG00000036960"}});
    orthology.insert({"ENST00000269373", std::set<std::string>{"ENSMFAG00000039659", "ENSMUSG00000039253", "ENSHGLG00000011397"}});
    orthology.insert({"ENST00000219255", std::set<std::string>{"ENSMFAG00000030985", "ENSHGLG00000018571", "ENSMUSG00000005699"}});
    orthology.insert({"ENST00000252996", std::set<std::string>{"ENSMFAG00000002330", "ENSMUSG00000039117", "ENSHGLG00000010369"}});
    orthology.insert({"ENST00000317775", std::set<std::string>{"ENSMUSG00000029361", "ENSMFAG00000000922", "ENSHGLG00000014607"}});
    orthology.insert({"ENST00000037243", std::set<std::string>{"ENSMFAG00000041724", "ENSHGLG00000009724", "ENSMUSG00000031950"}});
    orthology.insert({"ENST00000357599", std::set<std::string>{"ENSHGLG00000002109", "ENSMUSG00000052133", "ENSMFAG00000002408"}});
    orthology.insert({"ENST00000316407", std::set<std::string>{"ENSMUSG00000068284", "ENSMFAG00000032462", "ENSHGLG00000016845"}});
    orthology.insert({"ENST00000359169", std::set<std::string>{"ENSMFAG00000040304", "ENSMUSG00000022836", "ENSHGLG00000000906"}});
    orthology.insert({"ENST00000315711", std::set<std::string>{"ENSMUSG00000022661", "ENSMFAG00000000111", "ENSHGLG00000016915"}});
    orthology.insert({"ENST00000506538", std::set<std::string>{"ENSHGLG00000008804", "ENSMUSG00000038299", "ENSMFAG00000001782"}});
    orthology.insert({"ENST00000304613", std::set<std::string>{"ENSMUSG00000066129", "ENSHGLG00000016841", "ENSMFAG00000042149"}});
    orthology.insert({"ENST00000283025", std::set<std::string>{"ENSMUSG00000039179", "ENSMFAG00000045530", "ENSHGLG00000009246"}});
    orthology.insert({"ENST00000286096", std::set<std::string>{"ENSMUSG00000030752", "ENSHGLG00000015770", "ENSMFAG00000045292"}});
    orthology.insert({"ENST00000177648", std::set<std::string>{"ENSHGLG00000019570", "ENSMUSG00000028028", "ENSMFAG00000035373"}});
    orthology.insert({"ENST00000310496", std::set<std::string>{"ENSHGLG00000007367", "ENSMFAG00000038569", "ENSMUSG00000025158"}});
    orthology.insert({"ENST00000354273", std::set<std::string>{"ENSHGLG00000010820", "ENSMFAG00000001207", "ENSMUSG00000024981"}});
    orthology.insert({"ENST00000243914", std::set<std::string>{"ENSHGLG00000017001", "ENSMUSG00000070495", "ENSMFAG00000037641"}});
    orthology.insert({"ENST00000374273", std::set<std::string>{"ENSMFAG00000033014", "ENSMUSG00000038180", "ENSHGLG00000017758"}});
    orthology.insert({"ENST00000422424", std::set<std::string>{"ENSMUSG00000031879", "ENSMFAG00000001820", "ENSHGLG00000016848"}});
    orthology.insert({"ENST00000322122", std::set<std::string>{"ENSHGLG00000010053", "ENSMUSG00000042828", "ENSMFAG00000035762"}});
    orthology.insert({"ENST00000340177", std::set<std::string>{"ENSHGLG00000017343", "ENSMUSG00000039059", "ENSMFAG00000040768"}});
    orthology.insert({"ENST00000356091", std::set<std::string>{"ENSMUSG00000039263", "ENSMFAG00000041186", "ENSHGLG00000009123"}});
    orthology.insert({"ENST00000330261", std::set<std::string>{"ENSHGLG00000005910", "ENSMFAG00000041008", "ENSMUSG00000025129"}});
    orthology.insert({"ENST00000328957", std::set<std::string>{"ENSMUSG00000033316", "ENSMFAG00000001630", "ENSHGLG00000012963"}});
    orthology.insert({"ENST00000324662", std::set<std::string>{"ENSMFAG00000003219", "ENSHGLG00000010838", "ENSMUSG00000030724"}});
    orthology.insert({"ENST00000277895", std::set<std::string>{"ENSMUSG00000025085", "ENSHGLG00000016437", "ENSMFAG00000046222"}});
    orthology.insert({"ENST00000324288", std::set<std::string>{"ENSMUSG00000022504", "ENSMFAG00000045595", "ENSHGLG00000013484"}});
    orthology.insert({"ENST00000217446", std::set<std::string>{"ENSMFAG00000042795", "ENSHGLG00000008565", "ENSMUSG00000038383"}});
    orthology.insert({"ENST00000202677", std::set<std::string>{"ENSHGLG00000016477", "ENSMFAG00000039275", "ENSMUSG00000037110"}});
    orthology.insert({"ENST00000545661", std::set<std::string>{"ENSMUSG00000050357", "ENSHGLG00000016247", "ENSMFAG00000042445"}});
    orthology.insert({"ENST00000254958", std::set<std::string>{"ENSMUSG00000027276", "ENSHGLG00000005457", "ENSMFAG00000033249"}});
    orthology.insert({"ENST00000376649", std::set<std::string>{"ENSHGLG00000016086", "ENSMFAG00000041194", "ENSMUSG00000029507"}});
    orthology.insert({"ENST00000592554", std::set<std::string>{"ENSMUSG00000020614", "ENSHGLG00000002315", "ENSMFAG00000033263"}});
    orthology.insert({"ENST00000324685", std::set<std::string>{"ENSMFAG00000032834", "ENSHGLG00000009552", "ENSMUSG00000030816"}});
    orthology.insert({"ENST00000343948", std::set<std::string>{"ENSHGLG00000010386", "ENSMFAG00000031037", "ENSMUSG00000029503"}});
    orthology.insert({"ENST00000228476", std::set<std::string>{"ENSMUSG00000042096", "ENSHGLG00000016640", "ENSMFAG00000000854"}});
    orthology.insert({"ENST00000369704", std::set<std::string>{"ENSMUSG00000046585", "ENSMFAG00000035977", "ENSHGLG00000002793"}});
    orthology.insert({"ENST00000374782", std::set<std::string>{"ENSMUSG00000039781", "ENSHGLG00000005455", "ENSMFAG00000041952"}});
    orthology.insert({"ENST00000356157", std::set<std::string>{"ENSMUSG00000025420", "ENSHGLG00000006317", "ENSMFAG00000029779"}});
    orthology.insert({"ENST00000314358", std::set<std::string>{"ENSMUSG00000038773", "ENSMFAG00000042919", "ENSHGLG00000004783"}});
    orthology.insert({"ENST00000280155", std::set<std::string>{"ENSHGLG00000020768", "ENSMFAG00000043222", "ENSMUSG00000033717"}});
    orthology.insert({"ENST00000369500", std::set<std::string>{"ENSMFAG00000042466", "ENSMUSG00000044313", "ENSHGLG00000009205"}});
    orthology.insert({"ENST00000574590", std::set<std::string>{"ENSMUSG00000018412", "ENSMFAG00000030723", "ENSHGLG00000006315"}});
    orthology.insert({"ENST00000262460", std::set<std::string>{"ENSHGLG00000000138", "ENSMFAG00000002736", "ENSMUSG00000027454"}});
    orthology.insert({"ENST00000268802", std::set<std::string>{"ENSHGLG00000014260", "ENSMUSG00000003848", "ENSMFAG00000030131"}});
    orthology.insert({"ENST00000279034", std::set<std::string>{"ENSMFAG00000032873", "ENSHGLG00000016240", "ENSMUSG00000055485"}});
    orthology.insert({"ENST00000306467", std::set<std::string>{"ENSHGLG00000013236", "ENSMFAG00000000165", "ENSMUSG00000048799"}});
    orthology.insert({"ENST00000262144", std::set<std::string>{"ENSHGLG00000010982", "ENSMFAG00000036379", "ENSMUSG00000031959"}});
    orthology.insert({"ENST00000284322", std::set<std::string>{"ENSMUSG00000035258", "ENSMFAG00000043185", "ENSHGLG00000002717"}});
    orthology.insert({"ENST00000328041", std::set<std::string>{"ENSMUSG00000063873", "ENSMFAG00000037051", "ENSHGLG00000006511"}});
    orthology.insert({"ENST00000296499", std::set<std::string>{"ENSHGLG00000001063", "ENSMUSG00000027977", "ENSMFAG00000034323"}});
    orthology.insert({"ENST00000280560", std::set<std::string>{"ENSHGLG00000013347", "ENSMFAG00000002483", "ENSMUSG00000029408"}});
    orthology.insert({"ENST00000247470", std::set<std::string>{"ENSMFAG00000033296", "ENSHGLG00000009850", "ENSMUSG00000030793"}});
    orthology.insert({"ENST00000278060", std::set<std::string>{"ENSMUSG00000025464", "ENSMFAG00000043355", "ENSHGLG00000013497"}});
    orthology.insert({"ENST00000217043", std::set<std::string>{"ENSHGLG00000010253", "ENSMUSG00000078949", "ENSMFAG00000038530"}});
    orthology.insert({"ENST00000343625", std::set<std::string>{"ENSMFAG00000045433", "ENSHGLG00000014513", "ENSMUSG00000052142"}});
    orthology.insert({"ENST00000215115", std::set<std::string>{"ENSHGLG00000017858", "ENSMFAG00000032311", "ENSMUSG00000030814"}});
    orthology.insert({"ENST00000201031", std::set<std::string>{"ENSMUSG00000028640", "ENSMFAG00000004040", "ENSHGLG00000006368"}});
    orthology.insert({"ENST00000341901", std::set<std::string>{"ENSMUSG00000042978", "ENSHGLG00000010271", "ENSMFAG00000003079"}});
    orthology.insert({"ENST00000317506", std::set<std::string>{"ENSHGLG00000014405", "ENSMUSG00000037415", "ENSMFAG00000035893"}});
    orthology.insert({"ENST00000316626", std::set<std::string>{"ENSMFAG00000002620", "ENSHGLG00000011106", "ENSMUSG00000022812"}});
    orthology.insert({"ENST00000373233", std::set<std::string>{"ENSHGLG00000004548", "ENSMFAG00000032830", "ENSMUSG00000057133"}});
    orthology.insert({"ENST00000358691", std::set<std::string>{"ENSMUSG00000020721", "ENSHGLG00000000732", "ENSMFAG00000045166"}});
    orthology.insert({"ENST00000279101", std::set<std::string>{"ENSMFAG00000016607", "ENSHGLG00000008246", "ENSMUSG00000038990"}});
    orthology.insert({"ENST00000369783", std::set<std::string>{"ENSMFAG00000009610", "ENSHGLG00000002195", "ENSMUSG00000094219"}});
    orthology.insert({"ENST00000397527", std::set<std::string>{"ENSHGLG00000010420", "ENSMUSG00000038241", "ENSMFAG00000041835"}});
    orthology.insert({"ENST00000361309", std::set<std::string>{"ENSMUSG00000055447", "ENSMFAG00000039536", "ENSHGLG00000013894"}});
    orthology.insert({"ENST00000261655", std::set<std::string>{"ENSMFAG00000041895", "ENSMUSG00000029420", "ENSHGLG00000016862"}});
    orthology.insert({"ENST00000358933", std::set<std::string>{"ENSHGLG00000016833", "ENSMUSG00000036270", "ENSMFAG00000030369"}});
    orthology.insert({"ENST00000296632", std::set<std::string>{"ENSMFAG00000030560", "ENSMUSG00000024378", "ENSHGLG00000014638"}});
    orthology.insert({"ENST00000373750", std::set<std::string>{"ENSHGLG00000010464", "ENSMFAG00000003771", "ENSMUSG00000027635"}});
    orthology.insert({"ENST00000371263", std::set<std::string>{"ENSMFAG00000031364", "ENSHGLG00000005570", "ENSMUSG00000005883"}});
    orthology.insert({"ENST00000584436", std::set<std::string>{"ENSHGLG00000006440", "ENSMUSG00000039741", "ENSMFAG00000000776"}});
    orthology.insert({"ENST00000370873", std::set<std::string>{"ENSMFAG00000000723", "ENSHGLG00000013634", "ENSMUSG00000027566"}});
    orthology.insert({"ENST00000253083", std::set<std::string>{"ENSHGLG00000011541", "ENSMFAG00000046309", "ENSMUSG00000000915"}});
    orthology.insert({"ENST00000354968", std::set<std::string>{"ENSMFAG00000037863", "ENSMUSG00000061086", "ENSHGLG00000010483"}});
    orthology.insert({"ENST00000331925", std::set<std::string>{"ENSMFAG00000030086", "ENSHGLG00000009170", "ENSMUSG00000062825"}});
    orthology.insert({"ENST00000392607", std::set<std::string>{"ENSHGLG00000012438", "ENSMUSG00000025475", "ENSMFAG00000032931"}});
    orthology.insert({"ENST00000520113", std::set<std::string>{"ENSMFAG00000038085", "ENSHGLG00000016007", "ENSMUSG00000070385"}});
    orthology.insert({"ENST00000215742", std::set<std::string>{"ENSMFAG00000002469", "ENSHGLG00000000288", "ENSMUSG00000022760"}});
    orthology.insert({"ENST00000245663", std::set<std::string>{"ENSHGLG00000019123", "ENSMFAG00000042680", "ENSMUSG00000027583"}});
    orthology.insert({"ENST00000393784", std::set<std::string>{"ENSMUSG00000001576", "ENSHGLG00000017611", "ENSMFAG00000037788"}});
    orthology.insert({"ENST00000433154", std::set<std::string>{"ENSMFAG00000025461", "ENSMUSG00000052616", "ENSHGLG00000019160"}});
    orthology.insert({"ENST00000264231", std::set<std::string>{"ENSHGLG00000012127", "ENSMUSG00000022803", "ENSMFAG00000039734"}});
    orthology.insert({"ENST00000279804", std::set<std::string>{"ENSMUSG00000042340", "ENSHGLG00000019208", "ENSMFAG00000000243"}});
    orthology.insert({"ENST00000261401", std::set<std::string>{"ENSHGLG00000017773", "ENSMUSG00000004530", "ENSMFAG00000044006"}});
    orthology.insert({"ENST00000373092", std::set<std::string>{"ENSMUSG00000017868", "ENSMFAG00000032486", "ENSHGLG00000008102"}});
    orthology.insert({"ENST00000358337", std::set<std::string>{"ENSHGLG00000008338", "ENSMUSG00000042660", "ENSMFAG00000001095"}});
    orthology.insert({"ENST00000361189", std::set<std::string>{"ENSMFAG00000039247", "ENSMUSG00000024083", "ENSHGLG00000014312"}});
    orthology.insert({"ENST00000398838", std::set<std::string>{"ENSHGLG00000010682", "ENSMUSG00000042675", "ENSMFAG00000003117"}});
    orthology.insert({"ENST00000302125", std::set<std::string>{"ENSHGLG00000004423", "ENSMFAG00000042397", "ENSMUSG00000024353"}});
    orthology.insert({"ENST00000380495", std::set<std::string>{"ENSMUSG00000058966", "ENSMFAG00000036812", "ENSHGLG00000010019"}});
    orthology.insert({"ENST00000413302", std::set<std::string>{"ENSHGLG00000000605", "ENSMFAG00000042492", "ENSMUSG00000022758"}});
    orthology.insert({"ENST00000313056", std::set<std::string>{"ENSMUSG00000025169", "ENSMFAG00000040871", "ENSHGLG00000006783"}});
    orthology.insert({"ENST00000261674", std::set<std::string>{"ENSMUSG00000029439", "ENSHGLG00000019216", "ENSMFAG00000037352"}});
    orthology.insert({"ENST00000353487", std::set<std::string>{"ENSMFAG00000037069", "ENSMUSG00000029550", "ENSHGLG00000009179"}});
    orthology.insert({"ENST00000348579", std::set<std::string>{"ENSMFAG00000037894", "ENSHGLG00000012449", "ENSMUSG00000039199"}});
    orthology.insert({"ENST00000517669", std::set<std::string>{"ENSMUSG00000015575", "ENSHGLG00000018219", "ENSMFAG00000045429"}});
    orthology.insert({"ENST00000256652", std::set<std::string>{"ENSMUSG00000086564", "ENSHGLG00000018298", "ENSMFAG00000033865"}});
    orthology.insert({"ENST00000643721", std::set<std::string>{"ENSMUSG00000025034", "ENSMFAG00000046181", "ENSHGLG00000002932"}});
    orthology.insert({"ENST00000265148", std::set<std::string>{"ENSHGLG00000000989", "ENSMUSG00000045328", "ENSMFAG00000039560"}});
    orthology.insert({"ENST00000193391", std::set<std::string>{"ENSMFAG00000032185", "ENSMUSG00000035270", "ENSHGLG00000006284"}});
    orthology.insert({"ENST00000224950", std::set<std::string>{"ENSMFAG00000041817", "ENSHGLG00000002775", "ENSMUSG00000042694"}});
    orthology.insert({"ENST00000361337", std::set<std::string>{"ENSMFAG00000042654", "ENSHGLG00000001115", "ENSMUSG00000070544"}});
    orthology.insert({"ENST00000361991", std::set<std::string>{"ENSHGLG00000014887", "ENSMFAG00000031684", "ENSMUSG00000073563"}});
    orthology.insert({"ENST00000336866", std::set<std::string>{"ENSHGLG00000010426", "ENSMFAG00000001971", "ENSMUSG00000027584"}});
    orthology.insert({"ENST00000394854", std::set<std::string>{"ENSMFAG00000003655", "ENSHGLG00000003192", "ENSMUSG00000028161"}});
    orthology.insert({"ENST00000369210", std::set<std::string>{"ENSMFAG00000031805", "ENSMUSG00000026931", "ENSHGLG00000016224"}});
    orthology.insert({"ENST00000361773", std::set<std::string>{"ENSMFAG00000041546", "ENSMUSG00000030782", "ENSHGLG00000012885"}});
    orthology.insert({"ENST00000269187", std::set<std::string>{"ENSHGLG00000001373", "ENSMFAG00000034536", "ENSMUSG00000024270"}});
    orthology.insert({"ENST00000264245", std::set<std::string>{"ENSMUSG00000022799", "ENSMFAG00000041247", "ENSHGLG00000012661"}});
    orthology.insert({"ENST00000340001", std::set<std::string>{"ENSMUSG00000041797", "ENSHGLG00000001596", "ENSMFAG00000042813"}});
    orthology.insert({"ENST00000170150", std::set<std::string>{"ENSHGLG00000015406", "ENSMFAG00000040564", "ENSMUSG00000027481"}});
    orthology.insert({"ENST00000269466", std::set<std::string>{"ENSMUSG00000036941", "ENSHGLG00000004360", "ENSMFAG00000004789"}});
    orthology.insert({"ENST00000400723", std::set<std::string>{"ENSMUSG00000025127", "ENSHGLG00000004371", "ENSMFAG00000029883"}});
    orthology.insert({"ENST00000389202", std::set<std::string>{"ENSHGLG00000009695", "ENSMUSG00000070369", "ENSMFAG00000036073"}});
    orthology.insert({"ENST00000246081", std::set<std::string>{"ENSHGLG00000008576", "ENSMUSG00000027416", "ENSMFAG00000040989"}});
    orthology.insert({"ENST00000262545", std::set<std::string>{"ENSMUSG00000027419", "ENSHGLG00000009894", "ENSMFAG00000037979"}});
    orthology.insert({"ENST00000329956", std::set<std::string>{"ENSMUSG00000054320", "ENSHGLG00000013489", "ENSMFAG00000002905"}});
    orthology.insert({"ENST00000317676", std::set<std::string>{"ENSMFAG00000030937", "ENSMUSG00000074678", "ENSHGLG00000016619"}});
    orthology.insert({"ENST00000279022", std::set<std::string>{"ENSMFAG00000000687", "ENSHGLG00000015347", "ENSMUSG00000067818"}});
    orthology.insert({"ENST00000358160", std::set<std::string>{"ENSMFAG00000032955", "ENSMUSG00000036292", "ENSHGLG00000016163"}});
    orthology.insert({"ENST00000455127", std::set<std::string>{"ENSMFAG00000036875", "ENSMUSG00000061111", "ENSHGLG00000005222"}});
    orthology.insert({"ENST00000370179", std::set<std::string>{"ENSMUSG00000016344", "ENSHGLG00000014857", "ENSMFAG00000039551"}});
    orthology.insert({"ENST00000369236", std::set<std::string>{"ENSHGLG00000010167", "ENSMUSG00000025089", "ENSMFAG00000001953"}});
    orthology.insert({"ENST00000409939", std::set<std::string>{"ENSMUSG00000042492", "ENSHGLG00000006622", "ENSMFAG00000039446"}});
    orthology.insert({"ENST00000254901", std::set<std::string>{"ENSHGLG00000010056", "ENSMFAG00000042585", "ENSMUSG00000038555"}});
    orthology.insert({"ENST00000369301", std::set<std::string>{"ENSMUSG00000025078", "ENSHGLG00000013432", "ENSMFAG00000038268"}});
    orthology.insert({"ENST00000342704", std::set<std::string>{"ENSHGLG00000018266", "ENSMUSG00000038533", "ENSMFAG00000000820"}});
    orthology.insert({"ENST00000361439", std::set<std::string>{"ENSHGLG00000006540", "ENSMFAG00000041758", "ENSMUSG00000030750"}});
    orthology.insert({"ENST00000316519", std::set<std::string>{"ENSHGLG00000014152", "ENSMFAG00000028497", "ENSMUSG00000029482"}});
    orthology.insert({"ENST00000267260", std::set<std::string>{"ENSMFAG00000041271", "ENSHGLG00000007830", "ENSMUSG00000063919"}});
    orthology.insert({"ENST00000340880", std::set<std::string>{"ENSHGLG00000006376", "ENSMUSG00000079563", "ENSMFAG00000024296"}});
    orthology.insert({"ENST00000337938", std::set<std::string>{"ENSHGLG00000018677", "ENSMUSG00000027524", "ENSMFAG00000039249"}});
    orthology.insert({"ENST00000323760", std::set<std::string>{"ENSHGLG00000007745", "ENSMUSG00000044201", "ENSMFAG00000035542"}});
    orthology.insert({"ENST00000579534", std::set<std::string>{"ENSMFAG00000011788", "ENSHGLG00000008868", "ENSMUSG00000038425"}});
    orthology.insert({"ENST00000296498", std::set<std::string>{"ENSMFAG00000031132", "ENSHGLG00000000672", "ENSMUSG00000027978"}});
    orthology.insert({"ENST00000261369", std::set<std::string>{"ENSHGLG00000004012", "ENSMUSG00000024535", "ENSMFAG00000033967"}});
    orthology.insert({"ENST00000647773", std::set<std::string>{"ENSHGLG00000011510", "ENSMFAG00000028694", "ENSMUSG00000044676"}});
    orthology.insert({"ENST00000265195", std::set<std::string>{"ENSMFAG00000035604", "ENSMUSG00000024357", "ENSHGLG00000013822"}});
    orthology.insert({"ENST00000264233", std::set<std::string>{"ENSHGLG00000012935", "ENSMUSG00000034206", "ENSMFAG00000001627"}});
    orthology.insert({"ENST00000349552", std::set<std::string>{"ENSMUSG00000068009", "ENSMFAG00000036761", "ENSHGLG00000018086"}});
    orthology.insert({"ENST00000431388", std::set<std::string>{"ENSHGLG00000009200", "ENSMFAG00000045199", "ENSMUSG00000078572"}});
    orthology.insert({"ENST00000262525", std::set<std::string>{"ENSMUSG00000045639", "ENSHGLG00000012095", "ENSMFAG00000038348"}});
    orthology.insert({"ENST00000343484", std::set<std::string>{"ENSHGLG00000006061", "ENSMFAG00000039288", "ENSMUSG00000059540"}});
    orthology.insert({"ENST00000331327", std::set<std::string>{"ENSMFAG00000041097", "ENSMUSG00000043991", "ENSHGLG00000020698"}});
    orthology.insert({"ENST00000219368", std::set<std::string>{"ENSHGLG00000011447", "ENSMFAG00000026134", "ENSMUSG00000033579"}});
    orthology.insert({"ENST00000269701", std::set<std::string>{"ENSMUSG00000024045", "ENSHGLG00000006879", "ENSMFAG00000042432"}});
    orthology.insert({"ENST00000284951", std::set<std::string>{"ENSMUSG00000074764", "ENSHGLG00000017747", "ENSMFAG00000040207"}});
    orthology.insert({"ENST00000356183", std::set<std::string>{"ENSMFAG00000043052", "ENSMUSG00000032777", "ENSHGLG00000011628"}});
    orthology.insert({"ENST00000306645", std::set<std::string>{"ENSMUSG00000039294", "ENSMFAG00000037540", "ENSHGLG00000008112"}});
    orthology.insert({"ENST00000574882", std::set<std::string>{"ENSMFAG00000030900", "ENSHGLG00000013685", "ENSMUSG00000039691"}});
    orthology.insert({"ENST00000246090", std::set<std::string>{"ENSHGLG00000015254", "ENSMFAG00000034171", "ENSMUSG00000037307"}});
    orthology.insert({"ENST00000329905", std::set<std::string>{"ENSHGLG00000002126", "ENSMUSG00000079258", "ENSMFAG00000032380"}});
    orthology.insert({"ENST00000333479", std::set<std::string>{"ENSMFAG00000045398", "ENSMUSG00000029414", "ENSHGLG00000009716"}});
    orthology.insert({"ENST00000370263", std::set<std::string>{"ENSMFAG00000000312", "ENSHGLG00000013659", "ENSMUSG00000027577"}});
    orthology.insert({"ENST00000285106", std::set<std::string>{"ENSMFAG00000040503", "ENSHGLG00000011728", "ENSMUSG00000024560"}});
    orthology.insert({"ENST00000290942", std::set<std::string>{"ENSMUSG00000014846", "ENSMFAG00000030980", "ENSHGLG00000011640"}});
    orthology.insert({"ENST00000371015", std::set<std::string>{"ENSHGLG00000013821", "ENSMFAG00000034633", "ENSMUSG00000027525"}});
    orthology.insert({"ENST00000217159", std::set<std::string>{"ENSHGLG00000008931", "ENSMFAG00000041624", "ENSMUSG00000038963"}});
    orthology.insert({"ENST00000306103", std::set<std::string>{"ENSMFAG00000045898", "ENSHGLG00000001996", "ENSMUSG00000022849"}});
    orthology.insert({"ENST00000308366", std::set<std::string>{"ENSMFAG00000045347", "ENSHGLG00000014412", "ENSMUSG00000029522"}});
    orthology.insert({"ENST00000369519", std::set<std::string>{"ENSMUSG00000043639", "ENSHGLG00000013206", "ENSMFAG00000036795"}});
    orthology.insert({"ENST00000373461", std::set<std::string>{"ENSHGLG00000016349", "ENSMUSG00000037843", "ENSMFAG00000031475"}});
    orthology.insert({"ENST00000494664", std::set<std::string>{"ENSMFAG00000037047", "ENSHGLG00000012181", "ENSMUSG00000002846"}});
    orthology.insert({"ENST00000326152", std::set<std::string>{"ENSHGLG00000012026", "ENSMUSG00000031891", "ENSMFAG00000041126"}});
    orthology.insert({"ENST00000261693", std::set<std::string>{"ENSMUSG00000037936", "ENSHGLG00000012619", "ENSMFAG00000000329"}});
    orthology.insert({"ENST00000357402", std::set<std::string>{"ENSMUSG00000030681", "ENSHGLG00000019034", "ENSMFAG00000032090"}});
    orthology.insert({"ENST00000294728", std::set<std::string>{"ENSMUSG00000027962", "ENSHGLG00000001392", "ENSMFAG00000028887"}});
    orthology.insert({"ENST00000400752", std::set<std::string>{"ENSMFAG00000000083", "ENSHGLG00000008455", "ENSMUSG00000049350"}});
    orthology.insert({"ENST00000462833", std::set<std::string>{"ENSMFAG00000003197", "ENSMUSG00000022840", "ENSHGLG00000002391"}});
    orthology.insert({"ENST00000256413", std::set<std::string>{"ENSMFAG00000037903", "ENSMUSG00000052928", "ENSHGLG00000005663"}});
    orthology.insert({"ENST00000552695", std::set<std::string>{"ENSMUSG00000053334", "ENSHGLG00000010944", "ENSMFAG00000037681"}});
    orthology.insert({"ENST00000331483", std::set<std::string>{"ENSMFAG00000038741", "ENSHGLG00000006261", "ENSMUSG00000025130"}});
    orthology.insert({"ENST00000373271", std::set<std::string>{"ENSMFAG00000000283", "ENSHGLG00000002041", "ENSMUSG00000016933"}});
    orthology.insert({"ENST00000376709", std::set<std::string>{"ENSMUSG00000033080", "ENSMFAG00000043885", "ENSHGLG00000000209"}});
    orthology.insert({"ENST00000622299", std::set<std::string>{"ENSMUSG00000057594", "ENSMFAG00000045059", "ENSHGLG00000011383"}});
    orthology.insert({"ENST00000265191", std::set<std::string>{"ENSMUSG00000035984", "ENSMFAG00000038119", "ENSHGLG00000005125"}});
    orthology.insert({"ENST00000356173", std::set<std::string>{"ENSMFAG00000035909", "ENSMUSG00000027480", "ENSHGLG00000014948"}});
    orthology.insert({"ENST00000398238", std::set<std::string>{"ENSMFAG00000032937", "ENSMUSG00000034187", "ENSHGLG00000011180"}});
    orthology.insert({"ENST00000315843", std::set<std::string>{"ENSHGLG00000016214", "ENSMUSG00000046961", "ENSMFAG00000000407"}});
    orthology.insert({"ENST00000362026", std::set<std::string>{"ENSHGLG00000000938", "ENSMFAG00000046399", "ENSMUSG00000037994"}});
    orthology.insert({"ENST00000413366", std::set<std::string>{"ENSMFAG00000027291", "ENSMUSG00000050965", "ENSHGLG00000000872"}});
    orthology.insert({"ENST00000255499", std::set<std::string>{"ENSHGLG00000004188", "ENSMFAG00000003335", "ENSMUSG00000031438"}});
    orthology.insert({"ENST00000229030", std::set<std::string>{"ENSHGLG00000021307", "ENSMUSG00000081683", "ENSMFAG00000024663"}});
    orthology.insert({"ENST00000342907", std::set<std::string>{"ENSMUSG00000031749", "ENSMFAG00000033155", "ENSHGLG00000012926"}});
    orthology.insert({"ENST00000319080", std::set<std::string>{"ENSHGLG00000018516", "ENSMUSG00000038342", "ENSMFAG00000030662"}});
    orthology.insert({"ENST00000349139", std::set<std::string>{"ENSHGLG00000017936", "ENSMUSG00000033285", "ENSMFAG00000034570"}});
    orthology.insert({"ENST00000216968", std::set<std::string>{"ENSMUSG00000027611", "ENSHGLG00000009583", "ENSMFAG00000003141"}});
    orthology.insert({"ENST00000282356", std::set<std::string>{"ENSMUSG00000038128", "ENSHGLG00000011480", "ENSMFAG00000036872"}});
    orthology.insert({"ENST00000419127", std::set<std::string>{"ENSHGLG00000012870", "ENSMUSG00000033177", "ENSMFAG00000043039"}});
    orthology.insert({"ENST00000295598", std::set<std::string>{"ENSMUSG00000033161", "ENSHGLG00000009304", "ENSMFAG00000034219"}});
    orthology.insert({"ENST00000354300", std::set<std::string>{"ENSMFAG00000045645", "ENSHGLG00000006681", "ENSMUSG00000038582"}});
    orthology.insert({"ENST00000373537", std::set<std::string>{"ENSHGLG00000017727", "ENSMFAG00000022564", "ENSMUSG00000067787"}});
    orthology.insert({"ENST00000280333", std::set<std::string>{"ENSMUSG00000058325", "ENSMFAG00000045941", "ENSHGLG00000014458"}});
    orthology.insert({"ENST00000392676", std::set<std::string>{"ENSMFAG00000041992", "ENSHGLG00000001910", "ENSMUSG00000018800"}});
    orthology.insert({"ENST00000302014", std::set<std::string>{"ENSMUSG00000051439", "ENSMFAG00000025943", "ENSHGLG00000006436"}});
    orthology.insert({"ENST00000398485", std::set<std::string>{"ENSMUSG00000037034", "ENSHGLG00000015866", "ENSMFAG00000044435"}});
    orthology.insert({"ENST00000359079", std::set<std::string>{"ENSHGLG00000002040", "ENSMUSG00000050931", "ENSMFAG00000041579"}});
    orthology.insert({"ENST00000426426", std::set<std::string>{"ENSMUSG00000079278", "ENSHGLG00000008279", "ENSMFAG00000038580"}});
    orthology.insert({"ENST00000264538", std::set<std::string>{"ENSMUSG00000032965", "ENSMFAG00000034173", "ENSHGLG00000012196"}});
    orthology.insert({"ENST00000252939", std::set<std::string>{"ENSMUSG00000025468", "ENSMFAG00000034695", "ENSHGLG00000012674"}});
    orthology.insert({"ENST00000273359", std::set<std::string>{"ENSMFAG00000038045", "ENSMUSG00000033157", "ENSHGLG00000012170"}});
    orthology.insert({"ENST00000583023", std::set<std::string>{"ENSHGLG00000014353", "ENSMUSG00000001901", "ENSMFAG00000000684"}});
    orthology.insert({"ENST00000369699", std::set<std::string>{"ENSMFAG00000044111", "ENSHGLG00000001754", "ENSMUSG00000063434"}});
    orthology.insert({"ENST00000370103", std::set<std::string>{"ENSMFAG00000032568", "ENSMUSG00000027965", "ENSHGLG00000000685"}});
    orthology.insert({"ENST00000358896", std::set<std::string>{"ENSMFAG00000046270", "ENSMUSG00000031901", "ENSHGLG00000018885"}});
    orthology.insert({"ENST00000284694", std::set<std::string>{"ENSMFAG00000041837", "ENSMUSG00000030994", "ENSHGLG00000017225"}});
    orthology.insert({"ENST00000254942", std::set<std::string>{"ENSHGLG00000010709", "ENSMFAG00000044110", "ENSMUSG00000031921"}});
    orthology.insert({"ENST00000323011", std::set<std::string>{"ENSMFAG00000032853", "ENSMUSG00000026312", "ENSHGLG00000001169"}});
    orthology.insert({"ENST00000547838", std::set<std::string>{"ENSMUSG00000044134", "ENSMFAG00000001748", "ENSHGLG00000011610"}});
    orthology.insert({"ENST00000327787", std::set<std::string>{"ENSHGLG00000012377", "ENSMFAG00000042241", "ENSMUSG00000025384"}});
    orthology.insert({"ENST00000219345", std::set<std::string>{"ENSHGLG00000013409", "ENSMUSG00000031903", "ENSMFAG00000040172"}});
    orthology.insert({"ENST00000419234", std::set<std::string>{"ENSMUSG00000029458", "ENSMFAG00000036173", "ENSHGLG00000011992"}});
    orthology.insert({"ENST00000368671", std::set<std::string>{"ENSHGLG00000010190", "ENSMUSG00000050866", "ENSMFAG00000003701"}});
    orthology.insert({"ENST00000322861", std::set<std::string>{"ENSHGLG00000008497", "ENSMUSG00000030672", "ENSMFAG00000039997"}});
    orthology.insert({"ENST00000405201", std::set<std::string>{"ENSMFAG00000001817", "ENSMUSG00000029478", "ENSHGLG00000013812"}});
    orthology.insert({"ENST00000376234", std::set<std::string>{"ENSMFAG00000044014", "ENSHGLG00000002256", "ENSMUSG00000041594"}});
    orthology.insert({"ENST00000205061", std::set<std::string>{"ENSMFAG00000020124", "ENSHGLG00000013832", "ENSMUSG00000003316"}});
    orthology.insert({"ENST00000202967", std::set<std::string>{"ENSMUSG00000029524", "ENSMFAG00000038370", "ENSHGLG00000014746"}});
    orthology.insert({"ENST00000345633", std::set<std::string>{"ENSHGLG00000019081", "ENSMUSG00000025076", "ENSMFAG00000045136"}});
    orthology.insert({"ENST00000291041", std::set<std::string>{"ENSHGLG00000013365", "ENSMFAG00000034697", "ENSMUSG00000048310"}});
    orthology.insert({"ENST00000315087", std::set<std::string>{"ENSMUSG00000025425", "ENSHGLG00000013201", "ENSMFAG00000035970"}});
    orthology.insert({"ENST00000219789", std::set<std::string>{"ENSMUSG00000030682", "ENSHGLG00000016919", "ENSMFAG00000004028"}});
    orthology.insert({"ENST00000398754", std::set<std::string>{"ENSMUSG00000012282", "ENSMFAG00000045242", "ENSHGLG00000004895"}});
    orthology.insert({"ENST00000360864", std::set<std::string>{"ENSMUSG00000000826", "ENSMFAG00000001665", "ENSHGLG00000015337"}});
    orthology.insert({"ENST00000369448", std::set<std::string>{"ENSMUSG00000044468", "ENSMFAG00000019955", "ENSHGLG00000017489"}});
    orthology.insert({"ENST00000376652", std::set<std::string>{"ENSHGLG00000000193", "ENSMFAG00000000133", "ENSMUSG00000033068"}});
    orthology.insert({"ENST00000302517", std::set<std::string>{"ENSMUSG00000046668", "ENSHGLG00000007092", "ENSMFAG00000042243"}});
    orthology.insert({"ENST00000354336", std::set<std::string>{"ENSHGLG00000010811", "ENSMFAG00000003676", "ENSMUSG00000006134"}});
    orthology.insert({"ENST00000347364", std::set<std::string>{"ENSMFAG00000037991", "ENSMUSG00000027274", "ENSHGLG00000013526"}});
    orthology.insert({"ENST00000370005", std::set<std::string>{"ENSMUSG00000038754", "ENSHGLG00000003511", "ENSMFAG00000036362"}});
    orthology.insert({"ENST00000357552", std::set<std::string>{"ENSMUSG00000060445", "ENSHGLG00000007561", "ENSMFAG00000000376"}});
    orthology.insert({"ENST00000394671", std::set<std::string>{"ENSMFAG00000034339", "ENSHGLG00000007817", "ENSMUSG00000006850"}});
    orthology.insert({"ENST00000302060", std::set<std::string>{"ENSHGLG00000005126", "ENSMFAG00000033878", "ENSMUSG00000024350"}});
    orthology.insert({"ENST00000314423", std::set<std::string>{"ENSMUSG00000041438", "ENSMFAG00000044575", "ENSHGLG00000015710"}});
    orthology.insert({"ENST00000263377", std::set<std::string>{"ENSMFAG00000030806", "ENSMUSG00000024002", "ENSHGLG00000004103"}});
    orthology.insert({"ENST00000370501", std::set<std::string>{"ENSHGLG00000015545", "ENSMFAG00000030438", "ENSMUSG00000027568"}});
    orthology.insert({"ENST00000369780", std::set<std::string>{"ENSMFAG00000001140", "ENSHGLG00000001530", "ENSMUSG00000006435"}});
    orthology.insert({"ENST00000355285", std::set<std::string>{"ENSMUSG00000071847", "ENSHGLG00000004258", "ENSMFAG00000003938"}});
    orthology.insert({"ENST00000269703", std::set<std::string>{"ENSHGLG00000007762", "ENSMUSG00000061126", "ENSMFAG00000043198"}});
    orthology.insert({"ENST00000614556", std::set<std::string>{"ENSHGLG00000014920", "ENSMFAG00000041397", "ENSMUSG00000049354"}});
    orthology.insert({"ENST00000606320", std::set<std::string>{"ENSMUSG00000038126", "ENSHGLG00000012543", "ENSMFAG00000046071"}});
    orthology.insert({"ENST00000356640", std::set<std::string>{"ENSHGLG00000019185", "ENSMFAG00000046056", "ENSMUSG00000025221"}});
    orthology.insert({"ENST00000301691", std::set<std::string>{"ENSMFAG00000045561", "ENSHGLG00000012172", "ENSMUSG00000001494"}});
    orthology.insert({"ENST00000329214", std::set<std::string>{"ENSMUSG00000049957", "ENSMFAG00000036416", "ENSHGLG00000009587"}});
    orthology.insert({"ENST00000299752", std::set<std::string>{"ENSHGLG00000019376", "ENSMUSG00000031881", "ENSMFAG00000036946"}});
    orthology.insert({"ENST00000357500", std::set<std::string>{"ENSMUSG00000060152", "ENSMFAG00000045933", "ENSHGLG00000011786"}});
    orthology.insert({"ENST00000372582", std::set<std::string>{"ENSHGLG00000001940", "ENSMUSG00000059203", "ENSMFAG00000036584"}});
    orthology.insert({"ENST00000330212", std::set<std::string>{"ENSMFAG00000040621", "ENSMUSG00000036304", "ENSHGLG00000013503"}});
    orthology.insert({"ENST00000288532", std::set<std::string>{"ENSHGLG00000013064", "ENSMUSG00000041733", "ENSMFAG00000038162"}});
    orthology.insert({"ENST00000308736", std::set<std::string>{"ENSHGLG00000014066", "ENSMUSG00000029480", "ENSMFAG00000037879"}});
    orthology.insert({"ENST00000288439", std::set<std::string>{"ENSMUSG00000061306", "ENSMFAG00000040675", "ENSHGLG00000004919"}});
    orthology.insert({"ENST00000359125", std::set<std::string>{"ENSMFAG00000042590", "ENSMUSG00000016346", "ENSHGLG00000016521"}});
    orthology.insert({"ENST00000299732", std::set<std::string>{"ENSMFAG00000001483", "ENSMUSG00000029601", "ENSHGLG00000015686"}});
    orthology.insert({"ENST00000369878", std::set<std::string>{"ENSMUSG00000064105", "ENSMFAG00000037915", "ENSHGLG00000002477"}});
    orthology.insert({"ENST00000351270", std::set<std::string>{"ENSMFAG00000037647", "ENSHGLG00000014463", "ENSMUSG00000025075"}});
    orthology.insert({"ENST00000361518", std::set<std::string>{"ENSMUSG00000025470", "ENSMFAG00000044733", "ENSHGLG00000018509"}});
    orthology.insert({"ENST00000283871", std::set<std::string>{"ENSHGLG00000011483", "ENSMUSG00000022821", "ENSMFAG00000041993"}});
    orthology.insert({"ENST00000328666", std::set<std::string>{"ENSHGLG00000005752", "ENSMUSG00000025138", "ENSMFAG00000045096"}});
    orthology.insert({"ENST00000369889", std::set<std::string>{"ENSMUSG00000047731", "ENSHGLG00000002057", "ENSMFAG00000042677"}});
    orthology.insert({"ENST00000610966", std::set<std::string>{"ENSMFAG00000033712", "ENSHGLG00000017833", "ENSMUSG00000042078"}});
    orthology.insert({"ENST00000339777", std::set<std::string>{"ENSHGLG00000018710", "ENSMUSG00000063409", "ENSMFAG00000038285"}});
    orthology.insert({"ENST00000288078", std::set<std::string>{"ENSMUSG00000033703", "ENSMFAG00000036078", "ENSHGLG00000012100"}});
    orthology.insert({"ENST00000361909", std::set<std::string>{"ENSMUSG00000031875", "ENSMFAG00000039621", "ENSHGLG00000011197"}});
    orthology.insert({"ENST00000370128", std::set<std::string>{"ENSHGLG00000002617", "ENSMFAG00000034132", "ENSMUSG00000000339"}});
    orthology.insert({"ENST00000358293", std::set<std::string>{"ENSMUSG00000070476", "ENSMFAG00000030015", "ENSHGLG00000021229"}});
    orthology.insert({"ENST00000331437", std::set<std::string>{"ENSMUSG00000094626", "ENSMFAG00000033221", "ENSHGLG00000010537"}});
    orthology.insert({"ENST00000332312", std::set<std::string>{"ENSMUSG00000050700", "ENSMFAG00000045816", "ENSHGLG00000008494"}});
    orthology.insert({"ENST00000245255", std::set<std::string>{"ENSMFAG00000042638", "ENSMUSG00000029423", "ENSHGLG00000011158"}});
    orthology.insert({"ENST00000617620", std::set<std::string>{"ENSHGLG00000014789", "ENSMUSG00000074569", "ENSMFAG00000042446"}});
    orthology.insert({"ENST00000370109", std::set<std::string>{"ENSMFAG00000003120", "ENSHGLG00000001639", "ENSMUSG00000033554"}});
    orthology.insert({"ENST00000309794", std::set<std::string>{"ENSHGLG00000008789", "ENSMFAG00000003174", "ENSMUSG00000000056"}});
    orthology.insert({"ENST00000457010", std::set<std::string>{"ENSMUSG00000042178", "ENSHGLG00000012066", "ENSMFAG00000043898"}});
    orthology.insert({"ENST00000298746", std::set<std::string>{"ENSHGLG00000015314", "ENSMFAG00000031767", "ENSMUSG00000025086"}});
    orthology.insert({"ENST00000228841", std::set<std::string>{"ENSMUSG00000013936", "ENSMFAG00000036782", "ENSHGLG00000010408"}});
    orthology.insert({"ENST00000258173", std::set<std::string>{"ENSMFAG00000041367", "ENSMUSG00000031951", "ENSHGLG00000010715"}});
    orthology.insert({"ENST00000219150", std::set<std::string>{"ENSMFAG00000030805", "ENSMUSG00000030707", "ENSHGLG00000014223"}});
    orthology.insert({"ENST00000571995", std::set<std::string>{"ENSMUSG00000025170", "ENSMFAG00000045235", "ENSHGLG00000011186"}});
    orthology.insert({"ENST00000370151", std::set<std::string>{"ENSMFAG00000036058", "ENSHGLG00000019507", "ENSMUSG00000041035"}});
    orthology.insert({"ENST00000290015", std::set<std::string>{"ENSMFAG00000040531", "ENSHGLG00000010324", "ENSMUSG00000018486"}});
    orthology.insert({"ENST00000217456", std::set<std::string>{"ENSHGLG00000001053", "ENSMUSG00000033096", "ENSMFAG00000033103"}});
    orthology.insert({"ENST00000288098", std::set<std::string>{"ENSMFAG00000004902", "ENSMUSG00000031750", "ENSHGLG00000012281"}});
    orthology.insert({"ENST00000228506", std::set<std::string>{"ENSMFAG00000031302", "ENSHGLG00000013447", "ENSMUSG00000048578"}});
    orthology.insert({"ENST00000361198", std::set<std::string>{"ENSMUSG00000025223", "ENSHGLG00000002254", "ENSMFAG00000041257"}});
    orthology.insert({"ENST00000351486", std::set<std::string>{"ENSMFAG00000037018", "ENSMUSG00000024191", "ENSHGLG00000018031"}});
    orthology.insert({"ENST00000262150", std::set<std::string>{"ENSMUSG00000047216", "ENSMFAG00000009175", "ENSHGLG00000001249"}});
    orthology.insert({"ENST00000330622", std::set<std::string>{"ENSMFAG00000031531", "ENSHGLG00000017895", "ENSMUSG00000032898"}});
    orthology.insert({"ENST00000306897", std::set<std::string>{"ENSHGLG00000009062", "ENSMUSG00000018012", "ENSMFAG00000007057"}});
    orthology.insert({"ENST00000300849", std::set<std::string>{"ENSMFAG00000042079", "ENSHGLG00000019042", "ENSMUSG00000049728"}});
    orthology.insert({"ENST00000273375", std::set<std::string>{"ENSMUSG00000022827", "ENSMFAG00000031923", "ENSHGLG00000014491"}});
    orthology.insert({"ENST00000308713", std::set<std::string>{"ENSMFAG00000043800", "ENSHGLG00000018156", "ENSMUSG00000030683"}});
    orthology.insert({"ENST00000228307", std::set<std::string>{"ENSHGLG00000010923", "ENSMUSG00000029528", "ENSMFAG00000031289"}});
    orthology.insert({"ENST00000217026", std::set<std::string>{"ENSHGLG00000008986", "ENSMUSG00000017861", "ENSMFAG00000032458"}});
    orthology.insert({"ENST00000217188", std::set<std::string>{"ENSHGLG00000006434", "ENSMFAG00000039048", "ENSMUSG00000027579"}});
    orthology.insert({"ENST00000219240", std::set<std::string>{"ENSMFAG00000043915", "ENSHGLG00000012868", "ENSMUSG00000031730"}});
    orthology.insert({"ENST00000280557", std::set<std::string>{"ENSMUSG00000023106", "ENSMFAG00000038312", "ENSHGLG00000009606"}});
    orthology.insert({"ENST00000378106", std::set<std::string>{"ENSMUSG00000027384", "ENSHGLG00000012482", "ENSMFAG00000044840"}});
    orthology.insert({"ENST00000371242", std::set<std::string>{"ENSHGLG00000009471", "ENSMFAG00000043344", "ENSMUSG00000027509"}});
    orthology.insert({"ENST00000273352", std::set<std::string>{"ENSMUSG00000022755", "ENSHGLG00000019585", "ENSMFAG00000000681"}});
    orthology.insert({"ENST00000290858", std::set<std::string>{"ENSMFAG00000001241", "ENSHGLG00000010694", "ENSMUSG00000031885"}});
    orthology.insert({"ENST00000377340", std::set<std::string>{"ENSHGLG00000010856", "ENSMFAG00000039893", "ENSMUSG00000001767"}});
    orthology.insert({"ENST00000306739", std::set<std::string>{"ENSMUSG00000025142", "ENSMFAG00000032150", "ENSHGLG00000005080"}});
    orthology.insert({"ENST00000370097", std::set<std::string>{"ENSHGLG00000008851", "ENSMFAG00000030674", "ENSMUSG00000047841"}});
    orthology.insert({"ENST00000328086", std::set<std::string>{"ENSHGLG00000015971", "ENSMUSG00000030757", "ENSMFAG00000037378"}});
    orthology.insert({"ENST00000297679", std::set<std::string>{"ENSMUSG00000042289", "ENSMFAG00000016219", "ENSHGLG00000010144"}});
    orthology.insert({"ENST00000348367", std::set<std::string>{"ENSMFAG00000032340", "ENSMUSG00000024978", "ENSHGLG00000011966"}});
    orthology.insert({"ENST00000262406", std::set<std::string>{"ENSMUSG00000020599", "ENSMFAG00000035462", "ENSHGLG00000001800"}});
    orthology.insert({"ENST00000324774", std::set<std::string>{"ENSHGLG00000011079", "ENSMFAG00000045272", "ENSMUSG00000029471"}});
    orthology.insert({"ENST00000370113", std::set<std::string>{"ENSHGLG00000001448", "ENSMUSG00000027963", "ENSMFAG00000001251"}});
    orthology.insert({"ENST00000289119", std::set<std::string>{"ENSMUSG00000002475", "ENSMFAG00000045155", "ENSHGLG00000004626"}});
    orthology.insert({"ENST00000284320", std::set<std::string>{"ENSHGLG00000004139", "ENSMUSG00000022752", "ENSMFAG00000039250"}});
    orthology.insert({"ENST00000449592", std::set<std::string>{"ENSMFAG00000003634", "ENSMUSG00000054434", "ENSHGLG00000017655"}});
    orthology.insert({"ENST00000377191", std::set<std::string>{"ENSMUSG00000027433", "ENSMFAG00000038122", "ENSHGLG00000014831"}});
    orthology.insert({"ENST00000354436", std::set<std::string>{"ENSMUSG00000003847", "ENSHGLG00000014649", "ENSMFAG00000037197"}});
    orthology.insert({"ENST00000636176", std::set<std::string>{"ENSMFAG00000035663", "ENSHGLG00000014376", "ENSMUSG00000108976"}});
    orthology.insert({"ENST00000605788", std::set<std::string>{"ENSMFAG00000044654", "ENSHGLG00000003156", "ENSMUSG00000015176"}});
    orthology.insert({"ENST00000323482", std::set<std::string>{"ENSMUSG00000027452", "ENSHGLG00000000232", "ENSMFAG00000003063"}});
    orthology.insert({"ENST00000246012", std::set<std::string>{"ENSMUSG00000027442", "ENSHGLG00000011126", "ENSMFAG00000033001"}});
    orthology.insert({"ENST00000309522", std::set<std::string>{"ENSMUSG00000027984", "ENSHGLG00000000793", "ENSMFAG00000033488"}});
    orthology.insert({"ENST00000361048", std::set<std::string>{"ENSMUSG00000035818", "ENSMFAG00000001676", "ENSHGLG00000018715"}});
    orthology.insert({"ENST00000268485", std::set<std::string>{"ENSMUSG00000001672", "ENSHGLG00000013360", "ENSMFAG00000043332"}});
    orthology.insert({"ENST00000287461", std::set<std::string>{"ENSMFAG00000002903", "ENSMUSG00000048921", "ENSHGLG00000009540"}});
    orthology.insert({"ENST00000300648", std::set<std::string>{"ENSMUSG00000041638", "ENSMFAG00000003588", "ENSHGLG00000012548"}});
    orthology.insert({"ENST00000359446", std::set<std::string>{"ENSHGLG00000009355", "ENSMUSG00000024544", "ENSMFAG00000000907"}});
    orthology.insert({"ENST00000295756", std::set<std::string>{"ENSMUSG00000030775", "ENSMFAG00000002057", "ENSHGLG00000013384"}});
    orthology.insert({"ENST00000337623", std::set<std::string>{"ENSMFAG00000003945", "ENSMUSG00000039990", "ENSHGLG00000012871"}});
    orthology.insert({"ENST00000377142", std::set<std::string>{"ENSHGLG00000012498", "ENSMUSG00000027434", "ENSMFAG00000034334"}});
    orthology.insert({"ENST00000506757", std::set<std::string>{"ENSMUSG00000024485", "ENSMFAG00000033873", "ENSHGLG00000014520"}});
    orthology.insert({"ENST00000369206", std::set<std::string>{"ENSHGLG00000012395", "ENSMUSG00000006270", "ENSMFAG00000044674"}});
    orthology.insert({"ENST00000369908", std::set<std::string>{"ENSHGLG00000013221", "ENSMUSG00000089917", "ENSMFAG00000001463"}});
    orthology.insert({"ENST00000284425", std::set<std::string>{"ENSMUSG00000044749", "ENSHGLG00000001770", "ENSMFAG00000003737"}});
    orthology.insert({"ENST00000395863", std::set<std::string>{"ENSHGLG00000010163", "ENSMFAG00000032242", "ENSMUSG00000008999"}});
    orthology.insert({"ENST00000361804", std::set<std::string>{"ENSMUSG00000024974", "ENSMFAG00000003098", "ENSHGLG00000014422"}});
    orthology.insert({"ENST00000341529", std::set<std::string>{"ENSMFAG00000038308", "ENSHGLG00000013876", "ENSMUSG00000031871"}});
    orthology.insert({"ENST00000369295", std::set<std::string>{"ENSMUSG00000035283", "ENSHGLG00000014778", "ENSMFAG00000031007"}});
    orthology.insert({"ENST00000396825", std::set<std::string>{"ENSHGLG00000004512", "ENSMFAG00000044491", "ENSMUSG00000048486"}});
    orthology.insert({"ENST00000268605", std::set<std::string>{"ENSMFAG00000043853", "ENSMUSG00000014776", "ENSHGLG00000011905"}});
    orthology.insert({"ENST00000424526", std::set<std::string>{"ENSHGLG00000017223", "ENSMUSG00000042942", "ENSMFAG00000037135"}});
    orthology.insert({"ENST00000311765", std::set<std::string>{"ENSMUSG00000048371", "ENSHGLG00000016881", "ENSMFAG00000028076"}});
    orthology.insert({"ENST00000358514", std::set<std::string>{"ENSMFAG00000036794", "ENSMUSG00000031897", "ENSHGLG00000012273"}});
    orthology.insert({"ENST00000551052", std::set<std::string>{"ENSMFAG00000042100", "ENSMUSG00000029608", "ENSHGLG00000015781"}});
    orthology.insert({"ENST00000306749", std::set<std::string>{"ENSHGLG00000004716", "ENSMUSG00000025153", "ENSMFAG00000038553"}});
    orthology.insert({"ENST00000261731", std::set<std::string>{"ENSMFAG00000036692", "ENSMUSG00000029595", "ENSHGLG00000006590"}});
    orthology.insert({"ENST00000244040", std::set<std::string>{"ENSMFAG00000044247", "ENSHGLG00000009337", "ENSMUSG00000027519"}});
    orthology.insert({"ENST00000412356", std::set<std::string>{"ENSHGLG00000006353", "ENSMFAG00000033733", "ENSMUSG00000001029"}});
    orthology.insert({"ENST00000355946", std::set<std::string>{"ENSMFAG00000044985", "ENSMUSG00000053617", "ENSHGLG00000002064"}});
    orthology.insert({"ENST00000361976", std::set<std::string>{"ENSHGLG00000009930", "ENSMFAG00000042323", "ENSMUSG00000042105"}});
    orthology.insert({"ENST00000370823", std::set<std::string>{"ENSMUSG00000039069", "ENSHGLG00000008803", "ENSMFAG00000045680"}});
    orthology.insert({"ENST00000305352", std::set<std::string>{"ENSMUSG00000045092", "ENSMFAG00000020071", "ENSHGLG00000001686"}});
    orthology.insert({"ENST00000356208", std::set<std::string>{"ENSMFAG00000043808", "ENSHGLG00000015077", "ENSMUSG00000027510"}});
    orthology.insert({"ENST00000260743", std::set<std::string>{"ENSHGLG00000002007", "ENSMFAG00000002974", "ENSMUSG00000033033"}});
    orthology.insert({"ENST00000417245", std::set<std::string>{"ENSMUSG00000025380", "ENSMFAG00000037869", "ENSHGLG00000012271"}});
    orthology.insert({"ENST00000361464", std::set<std::string>{"ENSMUSG00000025220", "ENSHGLG00000019033", "ENSMFAG00000032188"}});
    orthology.insert({"ENST00000204726", std::set<std::string>{"ENSMFAG00000015229", "ENSHGLG00000012624", "ENSMUSG00000029502"}});
    orthology.insert({"ENST00000638972", std::set<std::string>{"ENSMFAG00000043585", "ENSMUSG00000053441", "ENSHGLG00000015411"}});
    orthology.insert({"ENST00000358465", std::set<std::string>{"ENSMUSG00000033014", "ENSMFAG00000041350", "ENSHGLG00000015394"}});
    orthology.insert({"ENST00000299980", std::set<std::string>{"ENSMFAG00000037769", "ENSHGLG00000014932", "ENSMUSG00000031731"}});
    orthology.insert({"ENST00000262138", std::set<std::string>{"ENSMFAG00000043089", "ENSMUSG00000020723", "ENSHGLG00000000797"}});
    orthology.insert({"ENST00000350887", std::set<std::string>{"ENSMFAG00000008986", "ENSHGLG00000017961", "ENSMUSG00000029402"}});
    orthology.insert({"ENST00000379378", std::set<std::string>{"ENSHGLG00000014276", "ENSMUSG00000014859", "ENSMFAG00000033833"}});
    orthology.insert({"ENST00000238936", std::set<std::string>{"ENSHGLG00000003127", "ENSMFAG00000041523", "ENSMUSG00000025227"}});
    orthology.insert({"ENST00000369583", std::set<std::string>{"ENSMUSG00000034765", "ENSHGLG00000012607", "ENSMFAG00000002031"}});
    orthology.insert({"ENST00000313733", std::set<std::string>{"ENSMFAG00000030160", "ENSMUSG00000039050", "ENSHGLG00000015027"}});
    orthology.insert({"ENST00000356554", std::set<std::string>{"ENSHGLG00000017646", "ENSMUSG00000008763", "ENSMFAG00000042171"}});
    orthology.insert({"ENST00000251864", std::set<std::string>{"ENSMUSG00000025081", "ENSMFAG00000043487", "ENSHGLG00000010877"}});
    orthology.insert({"ENST00000320238", std::set<std::string>{"ENSMFAG00000007499", "ENSHGLG00000009987", "ENSMUSG00000048540"}});
    orthology.insert({"ENST00000398733", std::set<std::string>{"ENSMFAG00000003689", "ENSMUSG00000091896", "ENSHGLG00000004792"}});
    orthology.insert({"ENST00000341744", std::set<std::string>{"ENSMFAG00000045392", "ENSMUSG00000038400", "ENSHGLG00000015008"}});
    orthology.insert({"ENST00000368648", std::set<std::string>{"ENSMFAG00000041034", "ENSMUSG00000010476", "ENSHGLG00000016339"}});
    orthology.insert({"ENST00000238146", std::set<std::string>{"ENSHGLG00000019202", "ENSMUSG00000029389", "ENSMFAG00000038165"}});
    return orthology;
}



template <typename Linktype>
bool artificialLink(Linktype const & link, IdentifierMapping const & idMap) {
    std::basic_regex re("artificial", std::regex_constants::extended | std::regex_constants::icase);
    for (auto&& occ : link.occurrence()) {
        if (!std::regex_search(idMap.querySequenceName(occ.sequence()), re)) { return false; }
    }
    return true;
}



auto artificialSids(IdentifierMapping const & idMap) {
    tsl::hopscotch_set<size_t> sids;
    std::basic_regex re("artificial", std::regex_constants::extended | std::regex_constants::icase);
    for (auto&& elem : idMap.sequenceIDToTuple()) {
        if (std::regex_search(elem.second.sequence, re)) {
            sids.insert(elem.first);
        }
    }
    return sids;
}



auto getTag(std::string const & seq) {
//std::cout << "[DEBUG]" << seq << std::endl;
    std::basic_regex re("[^\\|]+$", std::regex_constants::extended);
    std::smatch m;
    if (!std::regex_search(seq, m, re)) { throw std::runtime_error("[ERROR] -- no regex match in "+seq); }
    if (m.size() != 1) { throw std::runtime_error("[ERROR] -- too many regex matches in "+seq); }
    auto tag = m.str();
//std::cout << "[DEBUG]" << tag << std::endl;
    // check if artificial
    std::basic_regex re2("artificial", std::regex_constants::extended);
    if (std::regex_search(seq, m, re2)) {
//std::cout << "[DEBUG] artificial" << std::endl;
        std::basic_regex re3("^[^\\|]+", std::regex_constants::extended);
        std::smatch m3;
        std::regex_search(seq, m3, re3);
//std::cout << "[DEBUG]" << m3.str() << std::endl;
        tag += m3.str();
    }
    return tag;
}



template <typename LinkType>
auto orthologySet(IdentifierMapping const & idMap) {
    tsl::hopscotch_map<std::string, size_t> tagToSid;
    for (auto&& elem : idMap.sequenceIDToTuple()) {
        auto tag = getTag(elem.second.sequence);
        tagToSid[tag] = elem.first;
    }
    auto orthology = orthologyInformation();
    tsl::hopscotch_set<LinkType, SequenceCombinationHash, SequenceCombinationEqual> oset;
    for (auto&& elem : orthology) {
        auto& hgTag = elem.first;
        if (tagToSid.find(hgTag) != tagToSid.end()) { // if batches, not all sequences present in idMap
            std::vector<std::string> nrTags;
            for (auto&& tag : elem.second) {
                if (tagToSid.find(tag) != tagToSid.end()) {
                    nrTags.emplace_back(tag);   // if batches, not all sequences present in idMap
                }
            }
            if (nrTags.size() == 3) {
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(0))), (uint32_t)tagToSid.at(nrTags.at(0)), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(1))), (uint32_t)tagToSid.at(nrTags.at(1)), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(2))), (uint32_t)tagToSid.at(nrTags.at(2)), 0, false, ""}}, 1});
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(0))), (uint32_t)tagToSid.at(nrTags.at(0)), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(2))), (uint32_t)tagToSid.at(nrTags.at(2)), 0, false, ""}}, 1});
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(1))), (uint32_t)tagToSid.at(nrTags.at(1)), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(2))), (uint32_t)tagToSid.at(nrTags.at(2)), 0, false, ""}}, 1});
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(2))), (uint32_t)tagToSid.at(nrTags.at(2)), 0, false, ""}}, 1});
            }
            if (nrTags.size() >= 2) { // also if nr == 3
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(0))), (uint32_t)tagToSid.at(nrTags.at(0)), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(1))), (uint32_t)tagToSid.at(nrTags.at(1)), 0, false, ""}}, 1});
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(1))), (uint32_t)tagToSid.at(nrTags.at(1)), 0, false, ""}}, 1});
            }
            if (nrTags.size() >= 1) { // also if nr == 3 or nr == 2
                oset.insert(LinkType{std::vector<KmerOccurrence>{
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(hgTag)), (uint32_t)tagToSid.at(hgTag), 0, false, ""},
                                        KmerOccurrence{(uint8_t)idMap.queryGenomeIDFromSequence(tagToSid.at(nrTags.at(0))), (uint32_t)tagToSid.at(nrTags.at(0)), 0, false, ""}}, 1});
            }
        }
    }
    return oset;
}



template <typename Linktype>
auto createFilename(Linktype const & link, IdentifierMapping const & idMap) {
    std::string filename;
    for (auto&& occ : link.occurrence()) {
        auto seq = idMap.querySequenceName(occ.sequence());
        auto tag = getTag(seq);
        if (filename.size()) {
            filename += "_"+tag;
        } else {
            filename = tag;
        }
    }
    filename += ".json";
    return fs::path(filename);
}



template <typename LinksetType>
void outputLinksetToFile(LinksetType const & linkset, IdentifierMapping const & idMap, fs::path outpath, bool onlyTP) {
    std::cout << "Writing Links to Files" << std::endl;
    std::cout << "[INFO] -- Total " << linkset.size() << " links in linkset" << std::endl;
    auto orthology = orthologySet<typename LinksetType::LinksetType::key_type>(idMap);
    auto artIDs = artificialSids(idMap);
    tsl::hopscotch_map<typename LinksetType::LinksetType::key_type,
                       std::vector<typename LinksetType::LinksetType::key_type>,
                       SequenceCombinationHash, SequenceCombinationEqual> seqtupleToLink;
    auto isArtificial = [&artIDs](typename LinksetType::LinksetType::key_type const & link) {
        for (auto&& occ : link.occurrence()) {
            if (artIDs.find(occ.sequence()) == artIDs.end()) {
                return false; // at least one non-artificial sequence
            }
        }
        return true;
    };
    auto isOrtholog = [&orthology](typename LinksetType::LinksetType::key_type const & link) {
        return orthology.find(link) != orthology.end();
    };
    size_t fp = 0;
    for (auto&& elem : linkset.linkset()) {
        auto& link = elem.first;
        auto isFP = isArtificial(link); //artificialLink(link, idMap);
        auto isOrtho = isOrtholog(link);
        if (isFP) { ++fp; }
        // only store links from orthologous or artificial pairs
        if (isOrtho || ((!onlyTP) && isFP)) {
            seqtupleToLink[link].emplace_back(link);
        }
    }
    std::cout << "[INFO] -- " << fp << " FP" << std::endl;
    outpath.remove_filename();
    for (auto&& elem : seqtupleToLink) {
        auto& link = elem.first;
        auto filename = createFilename(link, idMap);
        auto outfile = outpath / "links" / filename;
        //std::cout << "Opening file " << outfile << std::endl;
        // append if file already exists
        std::string content;
        if (fs::exists(outfile)) {
            std::cout << "File " << outfile << " exists, appending" << std::endl;
            std::ifstream is{outfile};
            std::ostringstream cs;
            cs << is.rdbuf();
            content = cs.str();
            content.replace(0,1,""); // replace openeing "[" by ""
            content.pop_back(); // drop final "]"
        }
        std::ofstream os{outfile};
        if (!os.is_open()) { std::cerr << "[ERROR] -- could not open " << outfile << std::endl; }
        JsonStreamArray ojs{os};
        for (auto&& l : elem.second) {
            std::vector<JsonValue> jLink;
            for (auto&& occ : l.occurrence()) { jLink.emplace_back(occ.toJsonValue(l.span(), idMap)); }
            ojs.addValue(jLink);
            // if file was not empty, append previous content
            if (content.size()) {
                ojs.addValue(JsonValue(content, JsonValue::stringIsValidJson));
            }
        }
    }
    std::cout << "Writing Links to Files Finished" << std::endl;
}

#endif // LINKSETOUTPUT_H
